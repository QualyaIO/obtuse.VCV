
/* Code automatically generated by Vult https://github.com/modlfo/vult */
#ifndef ENGINE_UTILS_H
#define ENGINE_UTILS_H
#include <stdint.h>
#include <math.h>
#include "vultin.h"
#include "engine_utils.tables.h"

static_inline fix16_t Util_noteToFrequency(int note){
   return fix_mul(0x217 /* 0.008176 */,fix_exp(fix_mul(0xec9 /* 0.057762 */,int_to_fix(note))));
};

typedef struct Util__ctx_type_1 {
   uint8_t pre;
} Util__ctx_type_1;

typedef Util__ctx_type_1 Util_edge_type;

static_inline void Util__ctx_type_1_init(Util__ctx_type_1 &_output_){
   Util__ctx_type_1 _ctx;
   _ctx.pre = false;
   _output_ = _ctx;
   return ;
}

static_inline void Util_edge_init(Util__ctx_type_1 &_output_){
   Util__ctx_type_1_init(_output_);
   return ;
}

static_inline uint8_t Util_edge(Util__ctx_type_1 &_ctx, uint8_t x){
   uint8_t ret;
   ret = (x && bool_not(_ctx.pre));
   _ctx.pre = x;
   return ret;
}

static_inline fix16_t Util_cubic_clipper(fix16_t x){
   if(x <= -0xaaaa /* -0.666667 */){
      return -0xaaaa /* -0.666667 */;
   }
   else
   {
      if(x >= 0xaaaa /* 0.666667 */){
         return 0xaaaa /* 0.666667 */;
      }
      else
      {
         return (x + fix_mul(fix_mul(fix_mul(-0x5555 /* -0.333333 */,x),x),x));
      }
   }
};

typedef struct Util__ctx_type_3 {
   fix16_t pre_x;
} Util__ctx_type_3;

typedef Util__ctx_type_3 Util_change_type;

static_inline void Util__ctx_type_3_init(Util__ctx_type_3 &_output_){
   Util__ctx_type_3 _ctx;
   _ctx.pre_x = 0x0 /* 0.000000 */;
   _output_ = _ctx;
   return ;
}

static_inline void Util_change_init(Util__ctx_type_3 &_output_){
   Util__ctx_type_3_init(_output_);
   return ;
}

static_inline uint8_t Util_change(Util__ctx_type_3 &_ctx, fix16_t x){
   uint8_t v;
   v = (_ctx.pre_x != x);
   _ctx.pre_x = x;
   return v;
}

typedef struct Util__ctx_type_4 {
   fix16_t x;
} Util__ctx_type_4;

typedef Util__ctx_type_4 Util_smooth_type;

static_inline void Util__ctx_type_4_init(Util__ctx_type_4 &_output_){
   Util__ctx_type_4 _ctx;
   _ctx.x = 0x0 /* 0.000000 */;
   _output_ = _ctx;
   return ;
}

static_inline void Util_smooth_init(Util__ctx_type_4 &_output_){
   Util__ctx_type_4_init(_output_);
   return ;
}

static_inline fix16_t Util_smooth(Util__ctx_type_4 &_ctx, fix16_t input, fix16_t coeff){
   _ctx.x = (_ctx.x + fix_mul(coeff,(input + (- _ctx.x))));
   return _ctx.x;
}

static_inline fix16_t Util_velocityToLevel(int velocity){
   velocity = int_clip(velocity,0,127);
   return fix_mul(0x204 /* 0.007874 */,int_to_fix(velocity));
}

typedef struct Trigg__ctx_type_0 {
   uint8_t triggers[128];
   int ticks;
   int shift;
   fix16_t ptriggers[128];
   int position;
   int n;
   fix16_t magnitude;
   int length;
   fix16_t evolve;
   int divider;
   uint8_t dirty;
   fix16_t density;
   fix16_t balance;
} Trigg__ctx_type_0;

typedef Trigg__ctx_type_0 Trigg__refresh_type;

void Trigg__ctx_type_0_init(Trigg__ctx_type_0 &_output_);

static_inline void Trigg__refresh_init(Trigg__ctx_type_0 &_output_){
   Trigg__ctx_type_0_init(_output_);
   return ;
}

void Trigg__refresh(Trigg__ctx_type_0 &_ctx);

typedef Trigg__ctx_type_0 Trigg_process_type;

static_inline void Trigg_process_init(Trigg__ctx_type_0 &_output_){
   Trigg__ctx_type_0_init(_output_);
   return ;
}

int Trigg_process(Trigg__ctx_type_0 &_ctx);

typedef Trigg__ctx_type_0 Trigg_restartLoop_type;

static_inline void Trigg_restartLoop_init(Trigg__ctx_type_0 &_output_){
   Trigg__ctx_type_0_init(_output_);
   return ;
}

static_inline void Trigg_restartLoop(Trigg__ctx_type_0 &_ctx){
   _ctx.n = 0;
   Trigg__refresh(_ctx);
}

typedef Trigg__ctx_type_0 Trigg_reset_type;

static_inline void Trigg_reset_init(Trigg__ctx_type_0 &_output_){
   Trigg__ctx_type_0_init(_output_);
   return ;
}

static_inline void Trigg_reset(Trigg__ctx_type_0 &_ctx){
   _ctx.ticks = 0;
   Trigg_restartLoop(_ctx);
}

typedef Trigg__ctx_type_0 Trigg__recompute_type;

static_inline void Trigg__recompute_init(Trigg__ctx_type_0 &_output_){
   Trigg__ctx_type_0_init(_output_);
   return ;
}

void Trigg__recompute(Trigg__ctx_type_0 &_ctx);

typedef Trigg__ctx_type_0 Trigg_setLength_type;

static_inline void Trigg_setLength_init(Trigg__ctx_type_0 &_output_){
   Trigg__ctx_type_0_init(_output_);
   return ;
}

void Trigg_setLength(Trigg__ctx_type_0 &_ctx, int newLength);

typedef Trigg__ctx_type_0 Trigg_setDivider_type;

static_inline void Trigg_setDivider_init(Trigg__ctx_type_0 &_output_){
   Trigg__ctx_type_0_init(_output_);
   return ;
}

static_inline void Trigg_setDivider(Trigg__ctx_type_0 &_ctx, int newDivider){
   _ctx.divider = int_clip(newDivider,1,newDivider);
};

typedef Trigg__ctx_type_0 Trigg_setShift_type;

static_inline void Trigg_setShift_init(Trigg__ctx_type_0 &_output_){
   Trigg__ctx_type_0_init(_output_);
   return ;
}

static_inline void Trigg_setShift(Trigg__ctx_type_0 &_ctx, int newShift){
   _ctx.shift = int_clip(newShift,0,newShift);
};

typedef Trigg__ctx_type_0 Trigg_setEvolve_type;

static_inline void Trigg_setEvolve_init(Trigg__ctx_type_0 &_output_){
   Trigg__ctx_type_0_init(_output_);
   return ;
}

static_inline void Trigg_setEvolve(Trigg__ctx_type_0 &_ctx, fix16_t newEvolve){
   _ctx.evolve = fix_clip(newEvolve,0x0 /* 0.000000 */,0x10000 /* 1.000000 */);
};

typedef Trigg__ctx_type_0 Trigg_setMagnitude_type;

static_inline void Trigg_setMagnitude_init(Trigg__ctx_type_0 &_output_){
   Trigg__ctx_type_0_init(_output_);
   return ;
}

static_inline void Trigg_setMagnitude(Trigg__ctx_type_0 &_ctx, fix16_t newMagnitude){
   _ctx.magnitude = fix_clip(newMagnitude,0x0 /* 0.000000 */,0x10000 /* 1.000000 */);
};

typedef Trigg__ctx_type_0 Trigg_setBalance_type;

static_inline void Trigg_setBalance_init(Trigg__ctx_type_0 &_output_){
   Trigg__ctx_type_0_init(_output_);
   return ;
}

void Trigg_setBalance(Trigg__ctx_type_0 &_ctx, fix16_t newBalance);

typedef Trigg__ctx_type_0 Trigg_setDensity_type;

static_inline void Trigg_setDensity_init(Trigg__ctx_type_0 &_output_){
   Trigg__ctx_type_0_init(_output_);
   return ;
}

void Trigg_setDensity(Trigg__ctx_type_0 &_ctx, fix16_t newDensity);

typedef Trigg__ctx_type_0 Trigg_setPosition_type;

static_inline void Trigg_setPosition_init(Trigg__ctx_type_0 &_output_){
   Trigg__ctx_type_0_init(_output_);
   return ;
}

static_inline void Trigg_setPosition(Trigg__ctx_type_0 &_ctx, int newPosition){
   _ctx.position = int_clip(newPosition,0,128);
};

typedef struct Processor_trigg__ctx_type_0 {
   int trign;
   Trigg__ctx_type_0 trigg;
   int tail;
   fix16_t fs;
   Util__ctx_type_3 _inst73b;
   Util__ctx_type_1 _inst551;
   Util__ctx_type_3 _inst43b;
   Util__ctx_type_1 _inst351;
   Util__ctx_type_3 _inst223b;
   Util__ctx_type_3 _inst193b;
   Util__ctx_type_3 _inst163b;
   Util__ctx_type_3 _inst13b;
   Util__ctx_type_3 _inst133b;
   Util__ctx_type_3 _inst103b;
} Processor_trigg__ctx_type_0;

typedef Processor_trigg__ctx_type_0 Processor_trigg_process_type;

void Processor_trigg__ctx_type_0_init(Processor_trigg__ctx_type_0 &_output_);

static_inline void Processor_trigg_process_init(Processor_trigg__ctx_type_0 &_output_){
   Processor_trigg__ctx_type_0_init(_output_);
   return ;
}

int Processor_trigg_process(Processor_trigg__ctx_type_0 &_ctx, fix16_t clock, fix16_t reset);

typedef Processor_trigg__ctx_type_0 Processor_trigg_setLength_type;

static_inline void Processor_trigg_setLength_init(Processor_trigg__ctx_type_0 &_output_){
   Processor_trigg__ctx_type_0_init(_output_);
   return ;
}

static_inline void Processor_trigg_setLength(Processor_trigg__ctx_type_0 &_ctx, int param, uint8_t force){
   if(Util_change(_ctx._inst13b,int_to_fix(param)) || force){
      Trigg_setLength(_ctx.trigg,param);
   }
};

typedef Processor_trigg__ctx_type_0 Processor_trigg_setDivider_type;

static_inline void Processor_trigg_setDivider_init(Processor_trigg__ctx_type_0 &_output_){
   Processor_trigg__ctx_type_0_init(_output_);
   return ;
}

static_inline void Processor_trigg_setDivider(Processor_trigg__ctx_type_0 &_ctx, int param, uint8_t force){
   if(Util_change(_ctx._inst43b,int_to_fix(param)) || force){
      Trigg_setDivider(_ctx.trigg,param);
   }
};

typedef Processor_trigg__ctx_type_0 Processor_trigg_setShift_type;

static_inline void Processor_trigg_setShift_init(Processor_trigg__ctx_type_0 &_output_){
   Processor_trigg__ctx_type_0_init(_output_);
   return ;
}

static_inline void Processor_trigg_setShift(Processor_trigg__ctx_type_0 &_ctx, int param, uint8_t force){
   if(Util_change(_ctx._inst73b,int_to_fix(param)) || force){
      Trigg_setShift(_ctx.trigg,param);
   }
};

typedef Processor_trigg__ctx_type_0 Processor_trigg_setPosition_type;

static_inline void Processor_trigg_setPosition_init(Processor_trigg__ctx_type_0 &_output_){
   Processor_trigg__ctx_type_0_init(_output_);
   return ;
}

static_inline void Processor_trigg_setPosition(Processor_trigg__ctx_type_0 &_ctx, int param, uint8_t force){
   if(Util_change(_ctx._inst103b,int_to_fix(param)) || force){
      Trigg_setPosition(_ctx.trigg,param);
   }
};

typedef Processor_trigg__ctx_type_0 Processor_trigg_setEvolve_type;

static_inline void Processor_trigg_setEvolve_init(Processor_trigg__ctx_type_0 &_output_){
   Processor_trigg__ctx_type_0_init(_output_);
   return ;
}

static_inline void Processor_trigg_setEvolve(Processor_trigg__ctx_type_0 &_ctx, fix16_t param, uint8_t force){
   if(Util_change(_ctx._inst133b,param) || force){
      Trigg_setEvolve(_ctx.trigg,param);
   }
};

typedef Processor_trigg__ctx_type_0 Processor_trigg_setMagnitude_type;

static_inline void Processor_trigg_setMagnitude_init(Processor_trigg__ctx_type_0 &_output_){
   Processor_trigg__ctx_type_0_init(_output_);
   return ;
}

static_inline void Processor_trigg_setMagnitude(Processor_trigg__ctx_type_0 &_ctx, fix16_t param, uint8_t force){
   if(Util_change(_ctx._inst163b,param) || force){
      Trigg_setMagnitude(_ctx.trigg,param);
   }
};

typedef Processor_trigg__ctx_type_0 Processor_trigg_setBalance_type;

static_inline void Processor_trigg_setBalance_init(Processor_trigg__ctx_type_0 &_output_){
   Processor_trigg__ctx_type_0_init(_output_);
   return ;
}

static_inline void Processor_trigg_setBalance(Processor_trigg__ctx_type_0 &_ctx, fix16_t param, uint8_t force){
   if(Util_change(_ctx._inst193b,param) || force){
      Trigg_setBalance(_ctx.trigg,param);
   }
};

typedef Processor_trigg__ctx_type_0 Processor_trigg_setDensity_type;

static_inline void Processor_trigg_setDensity_init(Processor_trigg__ctx_type_0 &_output_){
   Processor_trigg__ctx_type_0_init(_output_);
   return ;
}

static_inline void Processor_trigg_setDensity(Processor_trigg__ctx_type_0 &_ctx, fix16_t param, uint8_t force){
   if(Util_change(_ctx._inst223b,param) || force){
      Trigg_setDensity(_ctx.trigg,param);
   }
};

typedef Processor_trigg__ctx_type_0 Processor_trigg_setSamplerate_type;

static_inline void Processor_trigg_setSamplerate_init(Processor_trigg__ctx_type_0 &_output_){
   Processor_trigg__ctx_type_0_init(_output_);
   return ;
}

static_inline void Processor_trigg_setSamplerate(Processor_trigg__ctx_type_0 &_ctx, fix16_t newFs){
   if((newFs > 0x0 /* 0.000000 */) && (newFs != _ctx.fs)){
      _ctx.fs = newFs;
      _ctx.tail = fix_to_int(_ctx.fs);
   }
};



#endif // ENGINE_UTILS_H
