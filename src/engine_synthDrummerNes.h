
/* Code automatically generated by Vult https://github.com/modlfo/vult */
#ifndef ENGINE_SYNTHDRUMMERNES_H
#define ENGINE_SYNTHDRUMMERNES_H
#include <stdint.h>
#include <math.h>
#include "vultin.h"
#include "engine_synthDrummerNes.tables.h"

static_inline fix16_t synthDrummerNes_Util_noteToFrequency(int note){
   return fix_mul(0x217 /* 0.008176 */,fix_exp(fix_mul(0xec9 /* 0.057762 */,int_to_fix(note))));
};

typedef struct synthDrummerNes_Util__ctx_type_1 {
   uint8_t pre;
} synthDrummerNes_Util__ctx_type_1;

typedef synthDrummerNes_Util__ctx_type_1 synthDrummerNes_Util_edge_type;

static_inline void synthDrummerNes_Util__ctx_type_1_init(synthDrummerNes_Util__ctx_type_1 &_output_){
   synthDrummerNes_Util__ctx_type_1 _ctx;
   _ctx.pre = false;
   _output_ = _ctx;
   return ;
}

static_inline void synthDrummerNes_Util_edge_init(synthDrummerNes_Util__ctx_type_1 &_output_){
   synthDrummerNes_Util__ctx_type_1_init(_output_);
   return ;
}

static_inline uint8_t synthDrummerNes_Util_edge(synthDrummerNes_Util__ctx_type_1 &_ctx, uint8_t x){
   uint8_t ret;
   ret = (x && bool_not(_ctx.pre));
   _ctx.pre = x;
   return ret;
}

static_inline fix16_t synthDrummerNes_Util_cubic_clipper(fix16_t x){
   if(x <= -0xaaaa /* -0.666667 */){
      return -0xaaaa /* -0.666667 */;
   }
   else
   {
      if(x >= 0xaaaa /* 0.666667 */){
         return 0xaaaa /* 0.666667 */;
      }
      else
      {
         return (x + fix_mul(fix_mul(fix_mul(-0x5555 /* -0.333333 */,x),x),x));
      }
   }
};

typedef struct synthDrummerNes_Util__ctx_type_3 {
   fix16_t pre_x;
} synthDrummerNes_Util__ctx_type_3;

typedef synthDrummerNes_Util__ctx_type_3 synthDrummerNes_Util_change_type;

static_inline void synthDrummerNes_Util__ctx_type_3_init(synthDrummerNes_Util__ctx_type_3 &_output_){
   synthDrummerNes_Util__ctx_type_3 _ctx;
   _ctx.pre_x = 0x0 /* 0.000000 */;
   _output_ = _ctx;
   return ;
}

static_inline void synthDrummerNes_Util_change_init(synthDrummerNes_Util__ctx_type_3 &_output_){
   synthDrummerNes_Util__ctx_type_3_init(_output_);
   return ;
}

static_inline uint8_t synthDrummerNes_Util_change(synthDrummerNes_Util__ctx_type_3 &_ctx, fix16_t x){
   uint8_t v;
   v = (_ctx.pre_x != x);
   _ctx.pre_x = x;
   return v;
}

typedef struct synthDrummerNes_Util__ctx_type_4 {
   fix16_t x;
} synthDrummerNes_Util__ctx_type_4;

typedef synthDrummerNes_Util__ctx_type_4 synthDrummerNes_Util_smooth_type;

static_inline void synthDrummerNes_Util__ctx_type_4_init(synthDrummerNes_Util__ctx_type_4 &_output_){
   synthDrummerNes_Util__ctx_type_4 _ctx;
   _ctx.x = 0x0 /* 0.000000 */;
   _output_ = _ctx;
   return ;
}

static_inline void synthDrummerNes_Util_smooth_init(synthDrummerNes_Util__ctx_type_4 &_output_){
   synthDrummerNes_Util__ctx_type_4_init(_output_);
   return ;
}

static_inline fix16_t synthDrummerNes_Util_smooth(synthDrummerNes_Util__ctx_type_4 &_ctx, fix16_t input, fix16_t coeff){
   _ctx.x = (_ctx.x + fix_mul(coeff,(input + (- _ctx.x))));
   return _ctx.x;
}

static_inline fix16_t synthDrummerNes_Util_velocityToLevel(int velocity){
   velocity = int_clip(velocity,0,127);
   return fix_mul(0x204 /* 0.007874 */,int_to_fix(velocity));
}

static_inline int synthDrummerNes_DrummerWrapper_drumkit_samples(){
   return 104531;
};

static_inline fix16_t synthDrummerNes_DrummerWrapper_drumkit(int channel, int index){
   if(channel == 0){
      return fix_wrap_array(synthDrummerNes_DrummerWrapper_drumkit_chan_0)[(index % 104531)];
   }
   return 0x0 /* 0.000000 */;
}

static_inline fix16_t synthDrummerNes_DrummerWrapper_getSample(int index){
   return synthDrummerNes_DrummerWrapper_drumkit(0,index);
};

static_inline int synthDrummerNes_DrummerWrapper_getSampleSize(){
   return synthDrummerNes_DrummerWrapper_drumkit_samples();
};

static_inline fix16_t synthDrummerNes_DrummerWrapper_getSampleFs(){
   return 0x1e0000 /* 30.000000 */;
};

void synthDrummerNes_DrummerWrapper_getSlicesStart(int (&_output_)[12]);

void synthDrummerNes_DrummerWrapper_getSlicesEnd(int (&_output_)[12]);

static_inline void synthDrummerNes_Buffer_buffer(fix16_t (&oBuff)[256]){
}

static_inline void synthDrummerNes_Buffer_buffer_large(fix16_t (&oBuff)[2048]){
}

typedef struct synthDrummerNes_Drummer__ctx_type_0 {
   fix16_t step;
   int slices_start[12];
   int slices_end[12];
   int slice;
   int size;
   fix16_t sampleFs;
   int posBase;
   fix16_t pos;
   fix16_t noteRatio;
   fix16_t level;
   fix16_t fsRatio;
   fix16_t fs;
   fix16_t buffer_o[256];
} synthDrummerNes_Drummer__ctx_type_0;

typedef synthDrummerNes_Drummer__ctx_type_0 synthDrummerNes_Drummer_process_type;

void synthDrummerNes_Drummer__ctx_type_0_init(synthDrummerNes_Drummer__ctx_type_0 &_output_);

static_inline void synthDrummerNes_Drummer_process_init(synthDrummerNes_Drummer__ctx_type_0 &_output_){
   synthDrummerNes_Drummer__ctx_type_0_init(_output_);
   return ;
}

fix16_t synthDrummerNes_Drummer_process(synthDrummerNes_Drummer__ctx_type_0 &_ctx);

typedef synthDrummerNes_Drummer__ctx_type_0 synthDrummerNes_Drummer_process_bufferTo_type;

static_inline void synthDrummerNes_Drummer_process_bufferTo_init(synthDrummerNes_Drummer__ctx_type_0 &_output_){
   synthDrummerNes_Drummer__ctx_type_0_init(_output_);
   return ;
}

void synthDrummerNes_Drummer_process_bufferTo(synthDrummerNes_Drummer__ctx_type_0 &_ctx, int nb, fix16_t (&oBuffer)[256]);

typedef synthDrummerNes_Drummer__ctx_type_0 synthDrummerNes_Drummer_process_buffer_type;

static_inline void synthDrummerNes_Drummer_process_buffer_init(synthDrummerNes_Drummer__ctx_type_0 &_output_){
   synthDrummerNes_Drummer__ctx_type_0_init(_output_);
   return ;
}

static_inline void synthDrummerNes_Drummer_process_buffer(synthDrummerNes_Drummer__ctx_type_0 &_ctx, int nb){
   synthDrummerNes_Drummer_process_bufferTo(_ctx,nb,_ctx.buffer_o);
};

typedef synthDrummerNes_Drummer__ctx_type_0 synthDrummerNes_Drummer_updateStep_type;

static_inline void synthDrummerNes_Drummer_updateStep_init(synthDrummerNes_Drummer__ctx_type_0 &_output_){
   synthDrummerNes_Drummer__ctx_type_0_init(_output_);
   return ;
}

static_inline void synthDrummerNes_Drummer_updateStep(synthDrummerNes_Drummer__ctx_type_0 &_ctx){
   _ctx.step = fix_mul(_ctx.fsRatio,_ctx.noteRatio);
};

typedef synthDrummerNes_Drummer__ctx_type_0 synthDrummerNes_Drummer_setSlices_type;

static_inline void synthDrummerNes_Drummer_setSlices_init(synthDrummerNes_Drummer__ctx_type_0 &_output_){
   synthDrummerNes_Drummer__ctx_type_0_init(_output_);
   return ;
}

void synthDrummerNes_Drummer_setSlices(synthDrummerNes_Drummer__ctx_type_0 &_ctx, int (&newSlicesStart)[12], int (&newSlicesEnd)[12]);

typedef synthDrummerNes_Drummer__ctx_type_0 synthDrummerNes_Drummer_setSamplerate_type;

static_inline void synthDrummerNes_Drummer_setSamplerate_init(synthDrummerNes_Drummer__ctx_type_0 &_output_){
   synthDrummerNes_Drummer__ctx_type_0_init(_output_);
   return ;
}

void synthDrummerNes_Drummer_setSamplerate(synthDrummerNes_Drummer__ctx_type_0 &_ctx, fix16_t newFs);

typedef synthDrummerNes_Drummer__ctx_type_0 synthDrummerNes_Drummer_getSampleSize_type;

static_inline void synthDrummerNes_Drummer_getSampleSize_init(synthDrummerNes_Drummer__ctx_type_0 &_output_){
   synthDrummerNes_Drummer__ctx_type_0_init(_output_);
   return ;
}

static_inline int synthDrummerNes_Drummer_getSampleSize(synthDrummerNes_Drummer__ctx_type_0 &_ctx){
   return _ctx.size;
};

typedef synthDrummerNes_Drummer__ctx_type_0 synthDrummerNes_Drummer_setLevel_type;

static_inline void synthDrummerNes_Drummer_setLevel_init(synthDrummerNes_Drummer__ctx_type_0 &_output_){
   synthDrummerNes_Drummer__ctx_type_0_init(_output_);
   return ;
}

static_inline void synthDrummerNes_Drummer_setLevel(synthDrummerNes_Drummer__ctx_type_0 &_ctx, fix16_t newLevel){
   _ctx.level = newLevel;
};

typedef synthDrummerNes_Drummer__ctx_type_0 synthDrummerNes_Drummer_noteOn_type;

static_inline void synthDrummerNes_Drummer_noteOn_init(synthDrummerNes_Drummer__ctx_type_0 &_output_){
   synthDrummerNes_Drummer__ctx_type_0_init(_output_);
   return ;
}

void synthDrummerNes_Drummer_noteOn(synthDrummerNes_Drummer__ctx_type_0 &_ctx, int note, int velocity, int channel);

typedef synthDrummerNes_Drummer__ctx_type_0 synthDrummerNes_Drummer_noteOff_type;

static_inline void synthDrummerNes_Drummer_noteOff_init(synthDrummerNes_Drummer__ctx_type_0 &_output_){
   synthDrummerNes_Drummer__ctx_type_0_init(_output_);
   return ;
}

static_inline void synthDrummerNes_Drummer_noteOff(synthDrummerNes_Drummer__ctx_type_0 &_ctx, int note, int channel){
}

typedef synthDrummerNes_Drummer__ctx_type_0 synthDrummerNes_Drummer_default_type;

static_inline void synthDrummerNes_Drummer_default_init(synthDrummerNes_Drummer__ctx_type_0 &_output_){
   synthDrummerNes_Drummer__ctx_type_0_init(_output_);
   return ;
}

void synthDrummerNes_Drummer_default(synthDrummerNes_Drummer__ctx_type_0 &_ctx);

typedef struct synthDrummerNes_Drummer__ctx_type_1 {
   synthDrummerNes_Drummer__ctx_type_0 _inst1b;
} synthDrummerNes_Drummer__ctx_type_1;

typedef synthDrummerNes_Drummer__ctx_type_1 synthDrummerNes_Drummer_dummy_type;

static_inline void synthDrummerNes_Drummer__ctx_type_1_init(synthDrummerNes_Drummer__ctx_type_1 &_output_){
   synthDrummerNes_Drummer__ctx_type_1 _ctx;
   synthDrummerNes_Drummer__ctx_type_0_init(_ctx._inst1b);
   _output_ = _ctx;
   return ;
}

static_inline void synthDrummerNes_Drummer_dummy_init(synthDrummerNes_Drummer__ctx_type_1 &_output_){
   synthDrummerNes_Drummer__ctx_type_1_init(_output_);
   return ;
}

static_inline void synthDrummerNes_Drummer_dummy(synthDrummerNes_Drummer__ctx_type_1 &_ctx){
   fix16_t buff[256];
   synthDrummerNes_Buffer_buffer(buff);
   synthDrummerNes_Drummer_process_bufferTo(_ctx._inst1b,0,buff);
}

typedef struct synthDrummerNes_Poly__ctx_type_0 {
   synthDrummerNes_Drummer__ctx_type_0 voice3;
   synthDrummerNes_Drummer__ctx_type_0 voice2;
   synthDrummerNes_Drummer__ctx_type_0 voice1;
   synthDrummerNes_Drummer__ctx_type_0 voice0;
   uint8_t should_leftovers;
} synthDrummerNes_Poly__ctx_type_0;

typedef synthDrummerNes_Poly__ctx_type_0 synthDrummerNes_Poly_getSample_type;

void synthDrummerNes_Poly__ctx_type_0_init(synthDrummerNes_Poly__ctx_type_0 &_output_);

static_inline void synthDrummerNes_Poly_getSample_init(synthDrummerNes_Poly__ctx_type_0 &_output_){
   synthDrummerNes_Poly__ctx_type_0_init(_output_);
   return ;
}

fix16_t synthDrummerNes_Poly_getSample(synthDrummerNes_Poly__ctx_type_0 &_ctx, int voice);

typedef synthDrummerNes_Poly__ctx_type_0 synthDrummerNes_Poly_runVoice_type;

static_inline void synthDrummerNes_Poly_runVoice_init(synthDrummerNes_Poly__ctx_type_0 &_output_){
   synthDrummerNes_Poly__ctx_type_0_init(_output_);
   return ;
}

static_inline void synthDrummerNes_Poly_runVoice(synthDrummerNes_Poly__ctx_type_0 &_ctx, int voice, int nb, fix16_t (&buff)[256]){
   switch(voice) {
      case 0:
         synthDrummerNes_Drummer_process_bufferTo(_ctx.voice0,nb,buff);
      break;
      case 1:
         synthDrummerNes_Drummer_process_bufferTo(_ctx.voice1,nb,buff);
      break;
      case 2:
         synthDrummerNes_Drummer_process_bufferTo(_ctx.voice2,nb,buff);
      break;
      case 3:
         synthDrummerNes_Drummer_process_bufferTo(_ctx.voice3,nb,buff);
      break;
    
   }
};

typedef synthDrummerNes_Poly__ctx_type_0 synthDrummerNes_Poly_sendNoteOn_type;

static_inline void synthDrummerNes_Poly_sendNoteOn_init(synthDrummerNes_Poly__ctx_type_0 &_output_){
   synthDrummerNes_Poly__ctx_type_0_init(_output_);
   return ;
}

static_inline void synthDrummerNes_Poly_sendNoteOn(synthDrummerNes_Poly__ctx_type_0 &_ctx, int voice, int note, int velocity, int channel){
   switch(voice) {
      case 0:
         synthDrummerNes_Drummer_noteOn(_ctx.voice0,note,velocity,channel);
      break;
      case 1:
         synthDrummerNes_Drummer_noteOn(_ctx.voice1,note,velocity,channel);
      break;
      case 2:
         synthDrummerNes_Drummer_noteOn(_ctx.voice2,note,velocity,channel);
      break;
      case 3:
         synthDrummerNes_Drummer_noteOn(_ctx.voice3,note,velocity,channel);
      break;
    
   }
};

typedef synthDrummerNes_Poly__ctx_type_0 synthDrummerNes_Poly_sendNoteOff_type;

static_inline void synthDrummerNes_Poly_sendNoteOff_init(synthDrummerNes_Poly__ctx_type_0 &_output_){
   synthDrummerNes_Poly__ctx_type_0_init(_output_);
   return ;
}

static_inline void synthDrummerNes_Poly_sendNoteOff(synthDrummerNes_Poly__ctx_type_0 &_ctx, int voice, int note, int channel){
   switch(voice) {
      case 0:
         synthDrummerNes_Drummer_noteOff(_ctx.voice0,note,channel);
      break;
      case 1:
         synthDrummerNes_Drummer_noteOff(_ctx.voice1,note,channel);
      break;
      case 2:
         synthDrummerNes_Drummer_noteOff(_ctx.voice2,note,channel);
      break;
      case 3:
         synthDrummerNes_Drummer_noteOff(_ctx.voice3,note,channel);
      break;
    
   }
};

typedef synthDrummerNes_Poly__ctx_type_0 synthDrummerNes_Poly_setSamplerate_type;

static_inline void synthDrummerNes_Poly_setSamplerate_init(synthDrummerNes_Poly__ctx_type_0 &_output_){
   synthDrummerNes_Poly__ctx_type_0_init(_output_);
   return ;
}

static_inline void synthDrummerNes_Poly_setSamplerate(synthDrummerNes_Poly__ctx_type_0 &_ctx, fix16_t fs){
   synthDrummerNes_Drummer_setSamplerate(_ctx.voice0,fs);
   synthDrummerNes_Drummer_setSamplerate(_ctx.voice1,fs);
   synthDrummerNes_Drummer_setSamplerate(_ctx.voice2,fs);
   synthDrummerNes_Drummer_setSamplerate(_ctx.voice3,fs);
}

typedef synthDrummerNes_Poly__ctx_type_0 synthDrummerNes_Poly_synthSetLoop_type;

static_inline void synthDrummerNes_Poly_synthSetLoop_init(synthDrummerNes_Poly__ctx_type_0 &_output_){
   synthDrummerNes_Poly__ctx_type_0_init(_output_);
   return ;
}

static_inline void synthDrummerNes_Poly_synthSetLoop(synthDrummerNes_Poly__ctx_type_0 &_ctx, uint8_t flag){
}

typedef synthDrummerNes_Poly__ctx_type_0 synthDrummerNes_Poly_synthSetLoopStart_type;

static_inline void synthDrummerNes_Poly_synthSetLoopStart_init(synthDrummerNes_Poly__ctx_type_0 &_output_){
   synthDrummerNes_Poly__ctx_type_0_init(_output_);
   return ;
}

static_inline void synthDrummerNes_Poly_synthSetLoopStart(synthDrummerNes_Poly__ctx_type_0 &_ctx, int value){
}

typedef synthDrummerNes_Poly__ctx_type_0 synthDrummerNes_Poly_synthSetLoopEnd_type;

static_inline void synthDrummerNes_Poly_synthSetLoopEnd_init(synthDrummerNes_Poly__ctx_type_0 &_output_){
   synthDrummerNes_Poly__ctx_type_0_init(_output_);
   return ;
}

static_inline void synthDrummerNes_Poly_synthSetLoopEnd(synthDrummerNes_Poly__ctx_type_0 &_ctx, int value){
}

typedef synthDrummerNes_Poly__ctx_type_0 synthDrummerNes_Poly_synthGetSize_type;

static_inline void synthDrummerNes_Poly_synthGetSize_init(synthDrummerNes_Poly__ctx_type_0 &_output_){
   synthDrummerNes_Poly__ctx_type_0_init(_output_);
   return ;
}

static_inline int synthDrummerNes_Poly_synthGetSize(synthDrummerNes_Poly__ctx_type_0 &_ctx){
   return 0;
};

typedef synthDrummerNes_Poly__ctx_type_0 synthDrummerNes_Poly_synthGetNbWavetables_type;

static_inline void synthDrummerNes_Poly_synthGetNbWavetables_init(synthDrummerNes_Poly__ctx_type_0 &_output_){
   synthDrummerNes_Poly__ctx_type_0_init(_output_);
   return ;
}

static_inline int synthDrummerNes_Poly_synthGetNbWavetables(synthDrummerNes_Poly__ctx_type_0 &_ctx){
   return 0;
};

typedef synthDrummerNes_Poly__ctx_type_0 synthDrummerNes_Poly_synthSetModulatorWavetable_type;

static_inline void synthDrummerNes_Poly_synthSetModulatorWavetable_init(synthDrummerNes_Poly__ctx_type_0 &_output_){
   synthDrummerNes_Poly__ctx_type_0_init(_output_);
   return ;
}

static_inline void synthDrummerNes_Poly_synthSetModulatorWavetable(synthDrummerNes_Poly__ctx_type_0 &_ctx, fix16_t wavetableIdx){
}

typedef synthDrummerNes_Poly__ctx_type_0 synthDrummerNes_Poly_synthSetModulatorWavetablePhase_type;

static_inline void synthDrummerNes_Poly_synthSetModulatorWavetablePhase_init(synthDrummerNes_Poly__ctx_type_0 &_output_){
   synthDrummerNes_Poly__ctx_type_0_init(_output_);
   return ;
}

static_inline void synthDrummerNes_Poly_synthSetModulatorWavetablePhase(synthDrummerNes_Poly__ctx_type_0 &_ctx, fix16_t phaseIdx){
}

typedef synthDrummerNes_Poly__ctx_type_0 synthDrummerNes_Poly_synthSetCarrierWavetable_type;

static_inline void synthDrummerNes_Poly_synthSetCarrierWavetable_init(synthDrummerNes_Poly__ctx_type_0 &_output_){
   synthDrummerNes_Poly__ctx_type_0_init(_output_);
   return ;
}

static_inline void synthDrummerNes_Poly_synthSetCarrierWavetable(synthDrummerNes_Poly__ctx_type_0 &_ctx, fix16_t wavetableIdx){
}

typedef synthDrummerNes_Poly__ctx_type_0 synthDrummerNes_Poly_synthSetCarrierWavetablePhase_type;

static_inline void synthDrummerNes_Poly_synthSetCarrierWavetablePhase_init(synthDrummerNes_Poly__ctx_type_0 &_output_){
   synthDrummerNes_Poly__ctx_type_0_init(_output_);
   return ;
}

static_inline void synthDrummerNes_Poly_synthSetCarrierWavetablePhase(synthDrummerNes_Poly__ctx_type_0 &_ctx, fix16_t phaseIdx){
}

typedef synthDrummerNes_Poly__ctx_type_0 synthDrummerNes_Poly_synthSetModulatorRatio_type;

static_inline void synthDrummerNes_Poly_synthSetModulatorRatio_init(synthDrummerNes_Poly__ctx_type_0 &_output_){
   synthDrummerNes_Poly__ctx_type_0_init(_output_);
   return ;
}

static_inline void synthDrummerNes_Poly_synthSetModulatorRatio(synthDrummerNes_Poly__ctx_type_0 &_ctx, fix16_t ratio){
}

typedef synthDrummerNes_Poly__ctx_type_0 synthDrummerNes_Poly_synthSetCarrierRatio_type;

static_inline void synthDrummerNes_Poly_synthSetCarrierRatio_init(synthDrummerNes_Poly__ctx_type_0 &_output_){
   synthDrummerNes_Poly__ctx_type_0_init(_output_);
   return ;
}

static_inline void synthDrummerNes_Poly_synthSetCarrierRatio(synthDrummerNes_Poly__ctx_type_0 &_ctx, fix16_t ratio){
}

typedef synthDrummerNes_Poly__ctx_type_0 synthDrummerNes_Poly_synthSetModulatorLevel_type;

static_inline void synthDrummerNes_Poly_synthSetModulatorLevel_init(synthDrummerNes_Poly__ctx_type_0 &_output_){
   synthDrummerNes_Poly__ctx_type_0_init(_output_);
   return ;
}

static_inline void synthDrummerNes_Poly_synthSetModulatorLevel(synthDrummerNes_Poly__ctx_type_0 &_ctx, fix16_t level){
}

typedef synthDrummerNes_Poly__ctx_type_0 synthDrummerNes_Poly_synthSetModulatorTargetLevel_type;

static_inline void synthDrummerNes_Poly_synthSetModulatorTargetLevel_init(synthDrummerNes_Poly__ctx_type_0 &_output_){
   synthDrummerNes_Poly__ctx_type_0_init(_output_);
   return ;
}

static_inline void synthDrummerNes_Poly_synthSetModulatorTargetLevel(synthDrummerNes_Poly__ctx_type_0 &_ctx, uint8_t targetLevel){
}

typedef synthDrummerNes_Poly__ctx_type_0 synthDrummerNes_Poly_synthSetModulatorPhaseShift_type;

static_inline void synthDrummerNes_Poly_synthSetModulatorPhaseShift_init(synthDrummerNes_Poly__ctx_type_0 &_output_){
   synthDrummerNes_Poly__ctx_type_0_init(_output_);
   return ;
}

static_inline void synthDrummerNes_Poly_synthSetModulatorPhaseShift(synthDrummerNes_Poly__ctx_type_0 &_ctx, fix16_t ratio){
}

typedef synthDrummerNes_Poly__ctx_type_0 synthDrummerNes_Poly_synthSetModulatorFeedback_type;

static_inline void synthDrummerNes_Poly_synthSetModulatorFeedback_init(synthDrummerNes_Poly__ctx_type_0 &_output_){
   synthDrummerNes_Poly__ctx_type_0_init(_output_);
   return ;
}

static_inline void synthDrummerNes_Poly_synthSetModulatorFeedback(synthDrummerNes_Poly__ctx_type_0 &_ctx, fix16_t ratio){
}

typedef synthDrummerNes_Poly__ctx_type_0 synthDrummerNes_Poly_synthSetModulatorADSR_type;

static_inline void synthDrummerNes_Poly_synthSetModulatorADSR_init(synthDrummerNes_Poly__ctx_type_0 &_output_){
   synthDrummerNes_Poly__ctx_type_0_init(_output_);
   return ;
}

static_inline void synthDrummerNes_Poly_synthSetModulatorADSR(synthDrummerNes_Poly__ctx_type_0 &_ctx, fix16_t a, fix16_t d, fix16_t s, fix16_t r){
}

typedef synthDrummerNes_Poly__ctx_type_0 synthDrummerNes_Poly_synthSetCarrierADSR_type;

static_inline void synthDrummerNes_Poly_synthSetCarrierADSR_init(synthDrummerNes_Poly__ctx_type_0 &_output_){
   synthDrummerNes_Poly__ctx_type_0_init(_output_);
   return ;
}

static_inline void synthDrummerNes_Poly_synthSetCarrierADSR(synthDrummerNes_Poly__ctx_type_0 &_ctx, fix16_t a, fix16_t d, fix16_t s, fix16_t r){
}

typedef synthDrummerNes_Poly__ctx_type_0 synthDrummerNes_Poly_shouldLeftOvers_type;

static_inline void synthDrummerNes_Poly_shouldLeftOvers_init(synthDrummerNes_Poly__ctx_type_0 &_output_){
   synthDrummerNes_Poly__ctx_type_0_init(_output_);
   return ;
}

static_inline uint8_t synthDrummerNes_Poly_shouldLeftOvers(synthDrummerNes_Poly__ctx_type_0 &_ctx){
   return _ctx.should_leftovers;
};

typedef synthDrummerNes_Poly__ctx_type_0 synthDrummerNes_Poly_default_type;

static_inline void synthDrummerNes_Poly_default_init(synthDrummerNes_Poly__ctx_type_0 &_output_){
   synthDrummerNes_Poly__ctx_type_0_init(_output_);
   return ;
}

void synthDrummerNes_Poly_default(synthDrummerNes_Poly__ctx_type_0 &_ctx);

typedef struct synthDrummerNes_Poly__ctx_type_1 {
   synthDrummerNes_Poly__ctx_type_0 _inst179;
} synthDrummerNes_Poly__ctx_type_1;

typedef synthDrummerNes_Poly__ctx_type_1 synthDrummerNes_Poly_dummy_type;

static_inline void synthDrummerNes_Poly__ctx_type_1_init(synthDrummerNes_Poly__ctx_type_1 &_output_){
   synthDrummerNes_Poly__ctx_type_1 _ctx;
   synthDrummerNes_Poly__ctx_type_0_init(_ctx._inst179);
   _output_ = _ctx;
   return ;
}

static_inline void synthDrummerNes_Poly_dummy_init(synthDrummerNes_Poly__ctx_type_1 &_output_){
   synthDrummerNes_Poly__ctx_type_1_init(_output_);
   return ;
}

static_inline void synthDrummerNes_Poly_dummy(synthDrummerNes_Poly__ctx_type_1 &_ctx){
   fix16_t buff[256];
   synthDrummerNes_Buffer_buffer(buff);
   synthDrummerNes_Poly_runVoice(_ctx._inst179,0,0,buff);
}

typedef struct synthDrummerNes_Notes__ctx_type_0 {
   uint8_t poly;
   int notes[128];
   int nb_notes;
   int last_notes[128];
} synthDrummerNes_Notes__ctx_type_0;

typedef synthDrummerNes_Notes__ctx_type_0 synthDrummerNes_Notes_setPoly_type;

void synthDrummerNes_Notes__ctx_type_0_init(synthDrummerNes_Notes__ctx_type_0 &_output_);

static_inline void synthDrummerNes_Notes_setPoly_init(synthDrummerNes_Notes__ctx_type_0 &_output_){
   synthDrummerNes_Notes__ctx_type_0_init(_output_);
   return ;
}

static_inline void synthDrummerNes_Notes_setPoly(synthDrummerNes_Notes__ctx_type_0 &_ctx, uint8_t flag){
   _ctx.poly = flag;
};

typedef synthDrummerNes_Notes__ctx_type_0 synthDrummerNes_Notes_default_type;

static_inline void synthDrummerNes_Notes_default_init(synthDrummerNes_Notes__ctx_type_0 &_output_){
   synthDrummerNes_Notes__ctx_type_0_init(_output_);
   return ;
}

static_inline void synthDrummerNes_Notes_default(synthDrummerNes_Notes__ctx_type_0 &_ctx){
   synthDrummerNes_Notes_setPoly(_ctx,false);
};

typedef synthDrummerNes_Notes__ctx_type_0 synthDrummerNes_Notes_nbNotes_type;

static_inline void synthDrummerNes_Notes_nbNotes_init(synthDrummerNes_Notes__ctx_type_0 &_output_){
   synthDrummerNes_Notes__ctx_type_0_init(_output_);
   return ;
}

static_inline int synthDrummerNes_Notes_nbNotes(synthDrummerNes_Notes__ctx_type_0 &_ctx){
   return _ctx.nb_notes;
};

typedef synthDrummerNes_Notes__ctx_type_0 synthDrummerNes_Notes_firstNote_type;

static_inline void synthDrummerNes_Notes_firstNote_init(synthDrummerNes_Notes__ctx_type_0 &_output_){
   synthDrummerNes_Notes__ctx_type_0_init(_output_);
   return ;
}

int synthDrummerNes_Notes_firstNote(synthDrummerNes_Notes__ctx_type_0 &_ctx);

typedef synthDrummerNes_Notes__ctx_type_0 synthDrummerNes_Notes_lastNote_type;

static_inline void synthDrummerNes_Notes_lastNote_init(synthDrummerNes_Notes__ctx_type_0 &_output_){
   synthDrummerNes_Notes__ctx_type_0_init(_output_);
   return ;
}

int synthDrummerNes_Notes_lastNote(synthDrummerNes_Notes__ctx_type_0 &_ctx);

typedef synthDrummerNes_Notes__ctx_type_0 synthDrummerNes_Notes_noteOn_type;

static_inline void synthDrummerNes_Notes_noteOn_init(synthDrummerNes_Notes__ctx_type_0 &_output_){
   synthDrummerNes_Notes__ctx_type_0_init(_output_);
   return ;
}

uint8_t synthDrummerNes_Notes_noteOn(synthDrummerNes_Notes__ctx_type_0 &_ctx, int note, int velocity, int channel);

typedef synthDrummerNes_Notes__ctx_type_0 synthDrummerNes_Notes_noteOff_type;

static_inline void synthDrummerNes_Notes_noteOff_init(synthDrummerNes_Notes__ctx_type_0 &_output_){
   synthDrummerNes_Notes__ctx_type_0_init(_output_);
   return ;
}

uint8_t synthDrummerNes_Notes_noteOff(synthDrummerNes_Notes__ctx_type_0 &_ctx, int note, int channel);

typedef struct synthDrummerNes_Voice__ctx_type_0 {
   synthDrummerNes_Notes__ctx_type_0 voicesinactive;
   synthDrummerNes_Notes__ctx_type_0 voicesactive;
   fix16_t voices_ratio;
   int voices[4];
   synthDrummerNes_Poly__ctx_type_0 poly;
   int number_voices;
   int notes[128];
   uint8_t normalize;
   fix16_t leftovers_decay;
   fix16_t leftovers;
   int last_velocities[4];
   fix16_t last_values[4];
   fix16_t fs;
   fix16_t buffer_v3[256];
   fix16_t buffer_v2[256];
   fix16_t buffer_v1[256];
   fix16_t buffer_v0[256];
} synthDrummerNes_Voice__ctx_type_0;

typedef synthDrummerNes_Voice__ctx_type_0 synthDrummerNes_Voice_process_type;

void synthDrummerNes_Voice__ctx_type_0_init(synthDrummerNes_Voice__ctx_type_0 &_output_);

static_inline void synthDrummerNes_Voice_process_init(synthDrummerNes_Voice__ctx_type_0 &_output_){
   synthDrummerNes_Voice__ctx_type_0_init(_output_);
   return ;
}

fix16_t synthDrummerNes_Voice_process(synthDrummerNes_Voice__ctx_type_0 &_ctx);

typedef synthDrummerNes_Voice__ctx_type_0 synthDrummerNes_Voice_process_bufferTo_type;

static_inline void synthDrummerNes_Voice_process_bufferTo_init(synthDrummerNes_Voice__ctx_type_0 &_output_){
   synthDrummerNes_Voice__ctx_type_0_init(_output_);
   return ;
}

void synthDrummerNes_Voice_process_bufferTo(synthDrummerNes_Voice__ctx_type_0 &_ctx, int nb, fix16_t (&oBuffer)[256]);

typedef synthDrummerNes_Voice__ctx_type_0 synthDrummerNes_Voice_process_bufferTo_alt_type;

static_inline void synthDrummerNes_Voice_process_bufferTo_alt_init(synthDrummerNes_Voice__ctx_type_0 &_output_){
   synthDrummerNes_Voice__ctx_type_0_init(_output_);
   return ;
}

void synthDrummerNes_Voice_process_bufferTo_alt(synthDrummerNes_Voice__ctx_type_0 &_ctx, int nb, fix16_t (&oBuffer)[256]);

typedef synthDrummerNes_Voice__ctx_type_0 synthDrummerNes_Voice_noteOff_type;

static_inline void synthDrummerNes_Voice_noteOff_init(synthDrummerNes_Voice__ctx_type_0 &_output_){
   synthDrummerNes_Voice__ctx_type_0_init(_output_);
   return ;
}

void synthDrummerNes_Voice_noteOff(synthDrummerNes_Voice__ctx_type_0 &_ctx, int note, int channel);

typedef synthDrummerNes_Voice__ctx_type_0 synthDrummerNes_Voice_noteOn_type;

static_inline void synthDrummerNes_Voice_noteOn_init(synthDrummerNes_Voice__ctx_type_0 &_output_){
   synthDrummerNes_Voice__ctx_type_0_init(_output_);
   return ;
}

void synthDrummerNes_Voice_noteOn(synthDrummerNes_Voice__ctx_type_0 &_ctx, int note, int velocity, int channel);

typedef synthDrummerNes_Voice__ctx_type_0 synthDrummerNes_Voice_setNbVoices_type;

static_inline void synthDrummerNes_Voice_setNbVoices_init(synthDrummerNes_Voice__ctx_type_0 &_output_){
   synthDrummerNes_Voice__ctx_type_0_init(_output_);
   return ;
}

void synthDrummerNes_Voice_setNbVoices(synthDrummerNes_Voice__ctx_type_0 &_ctx, int nbvoices);

typedef synthDrummerNes_Voice__ctx_type_0 synthDrummerNes_Voice_setNormalize_type;

static_inline void synthDrummerNes_Voice_setNormalize_init(synthDrummerNes_Voice__ctx_type_0 &_output_){
   synthDrummerNes_Voice__ctx_type_0_init(_output_);
   return ;
}

static_inline void synthDrummerNes_Voice_setNormalize(synthDrummerNes_Voice__ctx_type_0 &_ctx, uint8_t flag){
   _ctx.normalize = flag;
};

typedef synthDrummerNes_Voice__ctx_type_0 synthDrummerNes_Voice_setSamplerate_type;

static_inline void synthDrummerNes_Voice_setSamplerate_init(synthDrummerNes_Voice__ctx_type_0 &_output_){
   synthDrummerNes_Voice__ctx_type_0_init(_output_);
   return ;
}

void synthDrummerNes_Voice_setSamplerate(synthDrummerNes_Voice__ctx_type_0 &_ctx, fix16_t newFs);

typedef synthDrummerNes_Voice__ctx_type_0 synthDrummerNes_Voice_synthSetLoop_type;

static_inline void synthDrummerNes_Voice_synthSetLoop_init(synthDrummerNes_Voice__ctx_type_0 &_output_){
   synthDrummerNes_Voice__ctx_type_0_init(_output_);
   return ;
}

static_inline void synthDrummerNes_Voice_synthSetLoop(synthDrummerNes_Voice__ctx_type_0 &_ctx, uint8_t flag){
   synthDrummerNes_Poly_synthSetLoop(_ctx.poly,flag);
};

typedef synthDrummerNes_Voice__ctx_type_0 synthDrummerNes_Voice_synthSetLoopStart_type;

static_inline void synthDrummerNes_Voice_synthSetLoopStart_init(synthDrummerNes_Voice__ctx_type_0 &_output_){
   synthDrummerNes_Voice__ctx_type_0_init(_output_);
   return ;
}

static_inline void synthDrummerNes_Voice_synthSetLoopStart(synthDrummerNes_Voice__ctx_type_0 &_ctx, int value){
   synthDrummerNes_Poly_synthSetLoopStart(_ctx.poly,value);
};

typedef synthDrummerNes_Voice__ctx_type_0 synthDrummerNes_Voice_synthSetLoopEnd_type;

static_inline void synthDrummerNes_Voice_synthSetLoopEnd_init(synthDrummerNes_Voice__ctx_type_0 &_output_){
   synthDrummerNes_Voice__ctx_type_0_init(_output_);
   return ;
}

static_inline void synthDrummerNes_Voice_synthSetLoopEnd(synthDrummerNes_Voice__ctx_type_0 &_ctx, int value){
   synthDrummerNes_Poly_synthSetLoopEnd(_ctx.poly,value);
};

typedef synthDrummerNes_Voice__ctx_type_0 synthDrummerNes_Voice_synthGetSize_type;

static_inline void synthDrummerNes_Voice_synthGetSize_init(synthDrummerNes_Voice__ctx_type_0 &_output_){
   synthDrummerNes_Voice__ctx_type_0_init(_output_);
   return ;
}

static_inline int synthDrummerNes_Voice_synthGetSize(synthDrummerNes_Voice__ctx_type_0 &_ctx){
   return synthDrummerNes_Poly_synthGetSize(_ctx.poly);
};

typedef synthDrummerNes_Voice__ctx_type_0 synthDrummerNes_Voice_synthGetNbWavetables_type;

static_inline void synthDrummerNes_Voice_synthGetNbWavetables_init(synthDrummerNes_Voice__ctx_type_0 &_output_){
   synthDrummerNes_Voice__ctx_type_0_init(_output_);
   return ;
}

static_inline int synthDrummerNes_Voice_synthGetNbWavetables(synthDrummerNes_Voice__ctx_type_0 &_ctx){
   return synthDrummerNes_Poly_synthGetNbWavetables(_ctx.poly);
};

typedef synthDrummerNes_Voice__ctx_type_0 synthDrummerNes_Voice_synthSetModulatorWavetable_type;

static_inline void synthDrummerNes_Voice_synthSetModulatorWavetable_init(synthDrummerNes_Voice__ctx_type_0 &_output_){
   synthDrummerNes_Voice__ctx_type_0_init(_output_);
   return ;
}

static_inline void synthDrummerNes_Voice_synthSetModulatorWavetable(synthDrummerNes_Voice__ctx_type_0 &_ctx, fix16_t wavetableIdx){
   synthDrummerNes_Poly_synthSetModulatorWavetable(_ctx.poly,wavetableIdx);
};

typedef synthDrummerNes_Voice__ctx_type_0 synthDrummerNes_Voice_synthSetModulatorWavetablePhase_type;

static_inline void synthDrummerNes_Voice_synthSetModulatorWavetablePhase_init(synthDrummerNes_Voice__ctx_type_0 &_output_){
   synthDrummerNes_Voice__ctx_type_0_init(_output_);
   return ;
}

static_inline void synthDrummerNes_Voice_synthSetModulatorWavetablePhase(synthDrummerNes_Voice__ctx_type_0 &_ctx, fix16_t phaseIdx){
   synthDrummerNes_Poly_synthSetModulatorWavetablePhase(_ctx.poly,phaseIdx);
};

typedef synthDrummerNes_Voice__ctx_type_0 synthDrummerNes_Voice_synthSetCarrierWavetable_type;

static_inline void synthDrummerNes_Voice_synthSetCarrierWavetable_init(synthDrummerNes_Voice__ctx_type_0 &_output_){
   synthDrummerNes_Voice__ctx_type_0_init(_output_);
   return ;
}

static_inline void synthDrummerNes_Voice_synthSetCarrierWavetable(synthDrummerNes_Voice__ctx_type_0 &_ctx, fix16_t wavetableIdx){
   synthDrummerNes_Poly_synthSetCarrierWavetable(_ctx.poly,wavetableIdx);
};

typedef synthDrummerNes_Voice__ctx_type_0 synthDrummerNes_Voice_synthSetCarrierWavetablePhase_type;

static_inline void synthDrummerNes_Voice_synthSetCarrierWavetablePhase_init(synthDrummerNes_Voice__ctx_type_0 &_output_){
   synthDrummerNes_Voice__ctx_type_0_init(_output_);
   return ;
}

static_inline void synthDrummerNes_Voice_synthSetCarrierWavetablePhase(synthDrummerNes_Voice__ctx_type_0 &_ctx, fix16_t phaseIdx){
   synthDrummerNes_Poly_synthSetCarrierWavetablePhase(_ctx.poly,phaseIdx);
};

typedef synthDrummerNes_Voice__ctx_type_0 synthDrummerNes_Voice_synthSetModulatorRatio_type;

static_inline void synthDrummerNes_Voice_synthSetModulatorRatio_init(synthDrummerNes_Voice__ctx_type_0 &_output_){
   synthDrummerNes_Voice__ctx_type_0_init(_output_);
   return ;
}

static_inline void synthDrummerNes_Voice_synthSetModulatorRatio(synthDrummerNes_Voice__ctx_type_0 &_ctx, fix16_t ratio){
   synthDrummerNes_Poly_synthSetModulatorRatio(_ctx.poly,ratio);
};

typedef synthDrummerNes_Voice__ctx_type_0 synthDrummerNes_Voice_synthSetCarrierRatio_type;

static_inline void synthDrummerNes_Voice_synthSetCarrierRatio_init(synthDrummerNes_Voice__ctx_type_0 &_output_){
   synthDrummerNes_Voice__ctx_type_0_init(_output_);
   return ;
}

static_inline void synthDrummerNes_Voice_synthSetCarrierRatio(synthDrummerNes_Voice__ctx_type_0 &_ctx, fix16_t ratio){
   synthDrummerNes_Poly_synthSetCarrierRatio(_ctx.poly,ratio);
};

typedef synthDrummerNes_Voice__ctx_type_0 synthDrummerNes_Voice_synthSetModulatorLevel_type;

static_inline void synthDrummerNes_Voice_synthSetModulatorLevel_init(synthDrummerNes_Voice__ctx_type_0 &_output_){
   synthDrummerNes_Voice__ctx_type_0_init(_output_);
   return ;
}

static_inline void synthDrummerNes_Voice_synthSetModulatorLevel(synthDrummerNes_Voice__ctx_type_0 &_ctx, fix16_t level){
   synthDrummerNes_Poly_synthSetModulatorLevel(_ctx.poly,level);
};

typedef synthDrummerNes_Voice__ctx_type_0 synthDrummerNes_Voice_synthSetModulatorTargetLevel_type;

static_inline void synthDrummerNes_Voice_synthSetModulatorTargetLevel_init(synthDrummerNes_Voice__ctx_type_0 &_output_){
   synthDrummerNes_Voice__ctx_type_0_init(_output_);
   return ;
}

static_inline void synthDrummerNes_Voice_synthSetModulatorTargetLevel(synthDrummerNes_Voice__ctx_type_0 &_ctx, uint8_t targetLevel){
   synthDrummerNes_Poly_synthSetModulatorTargetLevel(_ctx.poly,targetLevel);
};

typedef synthDrummerNes_Voice__ctx_type_0 synthDrummerNes_Voice_synthSetModulatorPhaseShift_type;

static_inline void synthDrummerNes_Voice_synthSetModulatorPhaseShift_init(synthDrummerNes_Voice__ctx_type_0 &_output_){
   synthDrummerNes_Voice__ctx_type_0_init(_output_);
   return ;
}

static_inline void synthDrummerNes_Voice_synthSetModulatorPhaseShift(synthDrummerNes_Voice__ctx_type_0 &_ctx, fix16_t ratio){
   synthDrummerNes_Poly_synthSetModulatorPhaseShift(_ctx.poly,ratio);
};

typedef synthDrummerNes_Voice__ctx_type_0 synthDrummerNes_Voice_synthSetModulatorFeedback_type;

static_inline void synthDrummerNes_Voice_synthSetModulatorFeedback_init(synthDrummerNes_Voice__ctx_type_0 &_output_){
   synthDrummerNes_Voice__ctx_type_0_init(_output_);
   return ;
}

static_inline void synthDrummerNes_Voice_synthSetModulatorFeedback(synthDrummerNes_Voice__ctx_type_0 &_ctx, fix16_t ratio){
   synthDrummerNes_Poly_synthSetModulatorFeedback(_ctx.poly,ratio);
};

typedef synthDrummerNes_Voice__ctx_type_0 synthDrummerNes_Voice_synthSetModulatorADSR_type;

static_inline void synthDrummerNes_Voice_synthSetModulatorADSR_init(synthDrummerNes_Voice__ctx_type_0 &_output_){
   synthDrummerNes_Voice__ctx_type_0_init(_output_);
   return ;
}

static_inline void synthDrummerNes_Voice_synthSetModulatorADSR(synthDrummerNes_Voice__ctx_type_0 &_ctx, fix16_t a, fix16_t d, fix16_t s, fix16_t r){
   synthDrummerNes_Poly_synthSetModulatorADSR(_ctx.poly,a,d,s,r);
};

typedef synthDrummerNes_Voice__ctx_type_0 synthDrummerNes_Voice_synthSetCarrierADSR_type;

static_inline void synthDrummerNes_Voice_synthSetCarrierADSR_init(synthDrummerNes_Voice__ctx_type_0 &_output_){
   synthDrummerNes_Voice__ctx_type_0_init(_output_);
   return ;
}

static_inline void synthDrummerNes_Voice_synthSetCarrierADSR(synthDrummerNes_Voice__ctx_type_0 &_ctx, fix16_t a, fix16_t d, fix16_t s, fix16_t r){
   synthDrummerNes_Poly_synthSetCarrierADSR(_ctx.poly,a,d,s,r);
};

typedef synthDrummerNes_Voice__ctx_type_0 synthDrummerNes_Voice_default_type;

static_inline void synthDrummerNes_Voice_default_init(synthDrummerNes_Voice__ctx_type_0 &_output_){
   synthDrummerNes_Voice__ctx_type_0_init(_output_);
   return ;
}

void synthDrummerNes_Voice_default(synthDrummerNes_Voice__ctx_type_0 &_ctx);

typedef struct synthDrummerNes_Voice__ctx_type_1 {
   synthDrummerNes_Voice__ctx_type_0 _inst275;
   synthDrummerNes_Voice__ctx_type_0 _inst1b9;
} synthDrummerNes_Voice__ctx_type_1;

typedef synthDrummerNes_Voice__ctx_type_1 synthDrummerNes_Voice_dummy_type;

void synthDrummerNes_Voice__ctx_type_1_init(synthDrummerNes_Voice__ctx_type_1 &_output_);

static_inline void synthDrummerNes_Voice_dummy_init(synthDrummerNes_Voice__ctx_type_1 &_output_){
   synthDrummerNes_Voice__ctx_type_1_init(_output_);
   return ;
}

static_inline void synthDrummerNes_Voice_dummy(synthDrummerNes_Voice__ctx_type_1 &_ctx){
   fix16_t buff[256];
   synthDrummerNes_Buffer_buffer(buff);
   synthDrummerNes_Voice_process_bufferTo(_ctx._inst1b9,0,buff);
   synthDrummerNes_Voice_process_bufferTo_alt(_ctx._inst275,0,buff);
}

int synthDrummerNes_Processor_cvToPitch(fix16_t cv);

typedef struct synthDrummerNes_Processor__ctx_type_1 {
   synthDrummerNes_Voice__ctx_type_0 voice;
   int last_pitches[16];
   int last_nbcables;
   uint8_t last_gates[16];
   fix16_t fs;
} synthDrummerNes_Processor__ctx_type_1;

typedef synthDrummerNes_Processor__ctx_type_1 synthDrummerNes_Processor_process_type;

void synthDrummerNes_Processor__ctx_type_1_init(synthDrummerNes_Processor__ctx_type_1 &_output_);

static_inline void synthDrummerNes_Processor_process_init(synthDrummerNes_Processor__ctx_type_1 &_output_){
   synthDrummerNes_Processor__ctx_type_1_init(_output_);
   return ;
}

static_inline fix16_t synthDrummerNes_Processor_process(synthDrummerNes_Processor__ctx_type_1 &_ctx){
   return synthDrummerNes_Voice_process(_ctx.voice);
};

typedef synthDrummerNes_Processor__ctx_type_1 synthDrummerNes_Processor_setNote_type;

static_inline void synthDrummerNes_Processor_setNote_init(synthDrummerNes_Processor__ctx_type_1 &_output_){
   synthDrummerNes_Processor__ctx_type_1_init(_output_);
   return ;
}

void synthDrummerNes_Processor_setNote(synthDrummerNes_Processor__ctx_type_1 &_ctx, fix16_t gate, fix16_t voct, fix16_t vel, int cable);

typedef synthDrummerNes_Processor__ctx_type_1 synthDrummerNes_Processor_nbCables_type;

static_inline void synthDrummerNes_Processor_nbCables_init(synthDrummerNes_Processor__ctx_type_1 &_output_){
   synthDrummerNes_Processor__ctx_type_1_init(_output_);
   return ;
}

void synthDrummerNes_Processor_nbCables(synthDrummerNes_Processor__ctx_type_1 &_ctx, int nbcables);

typedef synthDrummerNes_Processor__ctx_type_1 synthDrummerNes_Processor_setSamplerate_type;

static_inline void synthDrummerNes_Processor_setSamplerate_init(synthDrummerNes_Processor__ctx_type_1 &_output_){
   synthDrummerNes_Processor__ctx_type_1_init(_output_);
   return ;
}

static_inline void synthDrummerNes_Processor_setSamplerate(synthDrummerNes_Processor__ctx_type_1 &_ctx, fix16_t newFs){
   if((newFs > 0x0 /* 0.000000 */) && (newFs != _ctx.fs)){
      _ctx.fs = newFs;
      synthDrummerNes_Voice_setSamplerate(_ctx.voice,_ctx.fs);
   }
};

typedef synthDrummerNes_Processor__ctx_type_1 synthDrummerNes_Processor_default_type;

static_inline void synthDrummerNes_Processor_default_init(synthDrummerNes_Processor__ctx_type_1 &_output_){
   synthDrummerNes_Processor__ctx_type_1_init(_output_);
   return ;
}

static_inline void synthDrummerNes_Processor_default(synthDrummerNes_Processor__ctx_type_1 &_ctx){
   synthDrummerNes_Voice_default(_ctx.voice);
   synthDrummerNes_Processor_setSamplerate(_ctx,0x2c1999 /* 44.100000 */);
}



#endif // ENGINE_SYNTHDRUMMERNES_H
