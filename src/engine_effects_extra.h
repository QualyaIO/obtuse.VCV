
/* Code automatically generated by Vult https://github.com/modlfo/vult */
#ifndef ENGINE_EFFECTS_EXTRA_H
#define ENGINE_EFFECTS_EXTRA_H
#include <stdint.h>
#include <math.h>
#include "vultin.h"
#include "engine_effects_extra.tables.h"

static_inline void extra_Buffer_buffer(fix16_t (&oBuff)[128]){
}

void extra_Buffer_buffer_large(fix16_t (&oBuff)[16384]);

static_inline int extra_Buffer_bufferSize(){
   return 128;
};

static_inline int extra_Buffer_bufferLargeSize(){
   return 16384;
};

typedef struct extra_Allpass__ctx_type_0 {
   fix16_t scale;
   int pos;
   fix16_t fs;
   int delay;
   fix16_t decay;
   fix16_t buffer_allpassed[16384];
   fix16_t buffer[16384];
} extra_Allpass__ctx_type_0;

typedef extra_Allpass__ctx_type_0 extra_Allpass_process_type;

void extra_Allpass__ctx_type_0_init(extra_Allpass__ctx_type_0 &_output_);

static_inline void extra_Allpass_process_init(extra_Allpass__ctx_type_0 &_output_){
   extra_Allpass__ctx_type_0_init(_output_);
   return ;
}

fix16_t extra_Allpass_process(extra_Allpass__ctx_type_0 &_ctx, fix16_t sample);

typedef extra_Allpass__ctx_type_0 extra_Allpass_process_bufferTo_type;

static_inline void extra_Allpass_process_bufferTo_init(extra_Allpass__ctx_type_0 &_output_){
   extra_Allpass__ctx_type_0_init(_output_);
   return ;
}

void extra_Allpass_process_bufferTo(extra_Allpass__ctx_type_0 &_ctx, int nb, fix16_t (&input)[128], fix16_t (&oBuffer)[128]);

typedef extra_Allpass__ctx_type_0 extra_Allpass_setDecay_type;

static_inline void extra_Allpass_setDecay_init(extra_Allpass__ctx_type_0 &_output_){
   extra_Allpass__ctx_type_0_init(_output_);
   return ;
}

static_inline void extra_Allpass_setDecay(extra_Allpass__ctx_type_0 &_ctx, fix16_t newDecay){
   _ctx.decay = fix_clip(newDecay,0x0 /* 0.000000 */,0x10000 /* 1.000000 */);
   _ctx.scale = fix_div(0x10000 /* 1.000000 */,(0x10000 /* 1.000000 */ + (_ctx.decay << 1)));
}

typedef extra_Allpass__ctx_type_0 extra_Allpass_getMaxDelay_type;

static_inline void extra_Allpass_getMaxDelay_init(extra_Allpass__ctx_type_0 &_output_){
   extra_Allpass__ctx_type_0_init(_output_);
   return ;
}

static_inline int extra_Allpass_getMaxDelay(extra_Allpass__ctx_type_0 &_ctx){
   return 16384;
};

typedef extra_Allpass__ctx_type_0 extra_Allpass_getMaxDelayms_type;

static_inline void extra_Allpass_getMaxDelayms_init(extra_Allpass__ctx_type_0 &_output_){
   extra_Allpass__ctx_type_0_init(_output_);
   return ;
}

static_inline fix16_t extra_Allpass_getMaxDelayms(extra_Allpass__ctx_type_0 &_ctx){
   if(_ctx.fs <= 0x0 /* 0.000000 */){
      return 0x0 /* 0.000000 */;
   }
   return fix_div(0x40000000 /* 16384.000000 */,_ctx.fs);
}

typedef extra_Allpass__ctx_type_0 extra_Allpass_setDelay_type;

static_inline void extra_Allpass_setDelay_init(extra_Allpass__ctx_type_0 &_output_){
   extra_Allpass__ctx_type_0_init(_output_);
   return ;
}

static_inline void extra_Allpass_setDelay(extra_Allpass__ctx_type_0 &_ctx, int newDelay){
   _ctx.delay = int_clip(newDelay,1,extra_Allpass_getMaxDelay(_ctx));
   _ctx.pos = (_ctx.pos % _ctx.delay);
}

typedef extra_Allpass__ctx_type_0 extra_Allpass_setDelayms_type;

static_inline void extra_Allpass_setDelayms_init(extra_Allpass__ctx_type_0 &_output_){
   extra_Allpass__ctx_type_0_init(_output_);
   return ;
}

static_inline void extra_Allpass_setDelayms(extra_Allpass__ctx_type_0 &_ctx, fix16_t delayms){
   extra_Allpass_setDelay(_ctx,fix_to_int(fix_mul(_ctx.fs,delayms)));
};

typedef extra_Allpass__ctx_type_0 extra_Allpass_setSamplerate_type;

static_inline void extra_Allpass_setSamplerate_init(extra_Allpass__ctx_type_0 &_output_){
   extra_Allpass__ctx_type_0_init(_output_);
   return ;
}

static_inline void extra_Allpass_setSamplerate(extra_Allpass__ctx_type_0 &_ctx, fix16_t newFs){
   if(newFs > 0x0 /* 0.000000 */){
      _ctx.fs = newFs;
   }
};

typedef extra_Allpass__ctx_type_0 extra_Allpass_default_type;

static_inline void extra_Allpass_default_init(extra_Allpass__ctx_type_0 &_output_){
   extra_Allpass__ctx_type_0_init(_output_);
   return ;
}

void extra_Allpass_default(extra_Allpass__ctx_type_0 &_ctx);

typedef struct extra_Allpass__ctx_type_1 {
   extra_Allpass__ctx_type_0 _inst156;
} extra_Allpass__ctx_type_1;

typedef extra_Allpass__ctx_type_1 extra_Allpass_dummy_type;

static_inline void extra_Allpass__ctx_type_1_init(extra_Allpass__ctx_type_1 &_output_){
   extra_Allpass__ctx_type_1 _ctx;
   extra_Allpass__ctx_type_0_init(_ctx._inst156);
   _output_ = _ctx;
   return ;
}

static_inline void extra_Allpass_dummy_init(extra_Allpass__ctx_type_1 &_output_){
   extra_Allpass__ctx_type_1_init(_output_);
   return ;
}

static_inline void extra_Allpass_dummy(extra_Allpass__ctx_type_1 &_ctx){
   fix16_t buff[128];
   extra_Buffer_buffer(buff);
   extra_Allpass_process_bufferTo(_ctx._inst156,0,buff,buff);
}

typedef struct extra_CombFB__ctx_type_0 {
   fix16_t scale;
   int pos;
   fix16_t fs;
   int delay;
   fix16_t decay;
   fix16_t buffer[16384];
} extra_CombFB__ctx_type_0;

typedef extra_CombFB__ctx_type_0 extra_CombFB_process_type;

void extra_CombFB__ctx_type_0_init(extra_CombFB__ctx_type_0 &_output_);

static_inline void extra_CombFB_process_init(extra_CombFB__ctx_type_0 &_output_){
   extra_CombFB__ctx_type_0_init(_output_);
   return ;
}

fix16_t extra_CombFB_process(extra_CombFB__ctx_type_0 &_ctx, fix16_t sample);

typedef extra_CombFB__ctx_type_0 extra_CombFB_process_bufferTo_type;

static_inline void extra_CombFB_process_bufferTo_init(extra_CombFB__ctx_type_0 &_output_){
   extra_CombFB__ctx_type_0_init(_output_);
   return ;
}

void extra_CombFB_process_bufferTo(extra_CombFB__ctx_type_0 &_ctx, int nb, fix16_t (&input)[128], fix16_t (&oBuffer)[128]);

typedef extra_CombFB__ctx_type_0 extra_CombFB_setDecay_type;

static_inline void extra_CombFB_setDecay_init(extra_CombFB__ctx_type_0 &_output_){
   extra_CombFB__ctx_type_0_init(_output_);
   return ;
}

static_inline void extra_CombFB_setDecay(extra_CombFB__ctx_type_0 &_ctx, fix16_t newDecay){
   _ctx.decay = fix_clip(newDecay,0x0 /* 0.000000 */,0x10000 /* 1.000000 */);
   _ctx.scale = fix_div(0x10000 /* 1.000000 */,(0x10000 /* 1.000000 */ + _ctx.decay));
}

typedef extra_CombFB__ctx_type_0 extra_CombFB_getMaxDelay_type;

static_inline void extra_CombFB_getMaxDelay_init(extra_CombFB__ctx_type_0 &_output_){
   extra_CombFB__ctx_type_0_init(_output_);
   return ;
}

static_inline int extra_CombFB_getMaxDelay(extra_CombFB__ctx_type_0 &_ctx){
   return 16384;
};

typedef extra_CombFB__ctx_type_0 extra_CombFB_getMaxDelayms_type;

static_inline void extra_CombFB_getMaxDelayms_init(extra_CombFB__ctx_type_0 &_output_){
   extra_CombFB__ctx_type_0_init(_output_);
   return ;
}

static_inline fix16_t extra_CombFB_getMaxDelayms(extra_CombFB__ctx_type_0 &_ctx){
   if(_ctx.fs <= 0x0 /* 0.000000 */){
      return 0x0 /* 0.000000 */;
   }
   return fix_div(0x40000000 /* 16384.000000 */,_ctx.fs);
}

typedef extra_CombFB__ctx_type_0 extra_CombFB_setDelay_type;

static_inline void extra_CombFB_setDelay_init(extra_CombFB__ctx_type_0 &_output_){
   extra_CombFB__ctx_type_0_init(_output_);
   return ;
}

static_inline void extra_CombFB_setDelay(extra_CombFB__ctx_type_0 &_ctx, int newDelay){
   _ctx.delay = int_clip(newDelay,1,extra_CombFB_getMaxDelay(_ctx));
   _ctx.pos = (_ctx.pos % _ctx.delay);
}

typedef extra_CombFB__ctx_type_0 extra_CombFB_setDelayms_type;

static_inline void extra_CombFB_setDelayms_init(extra_CombFB__ctx_type_0 &_output_){
   extra_CombFB__ctx_type_0_init(_output_);
   return ;
}

static_inline void extra_CombFB_setDelayms(extra_CombFB__ctx_type_0 &_ctx, fix16_t delayms){
   extra_CombFB_setDelay(_ctx,fix_to_int(fix_mul(_ctx.fs,delayms)));
};

typedef extra_CombFB__ctx_type_0 extra_CombFB_setSamplerate_type;

static_inline void extra_CombFB_setSamplerate_init(extra_CombFB__ctx_type_0 &_output_){
   extra_CombFB__ctx_type_0_init(_output_);
   return ;
}

static_inline void extra_CombFB_setSamplerate(extra_CombFB__ctx_type_0 &_ctx, fix16_t newFs){
   if(newFs > 0x0 /* 0.000000 */){
      _ctx.fs = newFs;
   }
};

typedef extra_CombFB__ctx_type_0 extra_CombFB_default_type;

static_inline void extra_CombFB_default_init(extra_CombFB__ctx_type_0 &_output_){
   extra_CombFB__ctx_type_0_init(_output_);
   return ;
}

static_inline void extra_CombFB_default(extra_CombFB__ctx_type_0 &_ctx){
   extra_Buffer_buffer_large(_ctx.buffer);
   extra_CombFB_setSamplerate(_ctx,0x2c1999 /* 44.100000 */);
   extra_CombFB_setDelayms(_ctx,0x320000 /* 50.000000 */);
   extra_CombFB_setDecay(_ctx,0x8000 /* 0.500000 */);
}

typedef struct extra_CombFB__ctx_type_1 {
   extra_CombFB__ctx_type_0 _inst13c;
} extra_CombFB__ctx_type_1;

typedef extra_CombFB__ctx_type_1 extra_CombFB_dummy_type;

static_inline void extra_CombFB__ctx_type_1_init(extra_CombFB__ctx_type_1 &_output_){
   extra_CombFB__ctx_type_1 _ctx;
   extra_CombFB__ctx_type_0_init(_ctx._inst13c);
   _output_ = _ctx;
   return ;
}

static_inline void extra_CombFB_dummy_init(extra_CombFB__ctx_type_1 &_output_){
   extra_CombFB__ctx_type_1_init(_output_);
   return ;
}

static_inline void extra_CombFB_dummy(extra_CombFB__ctx_type_1 &_ctx){
   fix16_t buff[128];
   extra_Buffer_buffer(buff);
   extra_CombFB_process_bufferTo(_ctx._inst13c,0,buff,buff);
}

static_inline fix16_t extra_Util_noteToFrequency(int note){
   return fix_mul(0x217 /* 0.008176 */,fix_exp(fix_mul(0xec9 /* 0.057762 */,int_to_fix(note))));
};

static_inline fix16_t extra_Util_tonesToCoeff(fix16_t semitones){
   fix16_t log_base;
   log_base = 0xb172 /* 0.693147 */;
   return fix_exp(fix_mul(fix_mul(0x1555 /* 0.083333 */,log_base),semitones));
}

typedef struct extra_Util__ctx_type_2 {
   uint8_t pre;
} extra_Util__ctx_type_2;

typedef extra_Util__ctx_type_2 extra_Util_edge_type;

static_inline void extra_Util__ctx_type_2_init(extra_Util__ctx_type_2 &_output_){
   extra_Util__ctx_type_2 _ctx;
   _ctx.pre = false;
   _output_ = _ctx;
   return ;
}

static_inline void extra_Util_edge_init(extra_Util__ctx_type_2 &_output_){
   extra_Util__ctx_type_2_init(_output_);
   return ;
}

static_inline uint8_t extra_Util_edge(extra_Util__ctx_type_2 &_ctx, uint8_t x){
   uint8_t ret;
   ret = (x && bool_not(_ctx.pre));
   _ctx.pre = x;
   return ret;
}

static_inline fix16_t extra_Util_cubic_clipper(fix16_t x){
   if(x <= -0xaaaa /* -0.666667 */){
      return -0xaaaa /* -0.666667 */;
   }
   else
   {
      if(x >= 0xaaaa /* 0.666667 */){
         return 0xaaaa /* 0.666667 */;
      }
      else
      {
         return (x + fix_mul(fix_mul(fix_mul(-0x5555 /* -0.333333 */,x),x),x));
      }
   }
};

typedef struct extra_Util__ctx_type_4 {
   fix16_t pre_x;
} extra_Util__ctx_type_4;

typedef extra_Util__ctx_type_4 extra_Util_change_type;

static_inline void extra_Util__ctx_type_4_init(extra_Util__ctx_type_4 &_output_){
   extra_Util__ctx_type_4 _ctx;
   _ctx.pre_x = 0x0 /* 0.000000 */;
   _output_ = _ctx;
   return ;
}

static_inline void extra_Util_change_init(extra_Util__ctx_type_4 &_output_){
   extra_Util__ctx_type_4_init(_output_);
   return ;
}

static_inline uint8_t extra_Util_change(extra_Util__ctx_type_4 &_ctx, fix16_t x){
   uint8_t v;
   v = (_ctx.pre_x != x);
   _ctx.pre_x = x;
   return v;
}

typedef struct extra_Util__ctx_type_5 {
   fix16_t x;
} extra_Util__ctx_type_5;

typedef extra_Util__ctx_type_5 extra_Util_smooth_type;

static_inline void extra_Util__ctx_type_5_init(extra_Util__ctx_type_5 &_output_){
   extra_Util__ctx_type_5 _ctx;
   _ctx.x = 0x0 /* 0.000000 */;
   _output_ = _ctx;
   return ;
}

static_inline void extra_Util_smooth_init(extra_Util__ctx_type_5 &_output_){
   extra_Util__ctx_type_5_init(_output_);
   return ;
}

static_inline fix16_t extra_Util_smooth(extra_Util__ctx_type_5 &_ctx, fix16_t input, fix16_t coeff){
   _ctx.x = (_ctx.x + fix_mul(coeff,(input + (- _ctx.x))));
   return _ctx.x;
}

static_inline fix16_t extra_Util_velocityToLevel(int velocity){
   velocity = int_clip(velocity,0,127);
   return fix_mul(0x204 /* 0.007874 */,int_to_fix(velocity));
}

typedef struct extra_Processor_combFB__ctx_type_0 {
   fix16_t fs;
   extra_CombFB__ctx_type_0 filter;
   fix16_t delayms;
   extra_Util__ctx_type_4 _inst53b;
   extra_Util__ctx_type_4 _inst23b;
} extra_Processor_combFB__ctx_type_0;

typedef extra_Processor_combFB__ctx_type_0 extra_Processor_combFB_process_type;

void extra_Processor_combFB__ctx_type_0_init(extra_Processor_combFB__ctx_type_0 &_output_);

static_inline void extra_Processor_combFB_process_init(extra_Processor_combFB__ctx_type_0 &_output_){
   extra_Processor_combFB__ctx_type_0_init(_output_);
   return ;
}

static_inline fix16_t extra_Processor_combFB_process(extra_Processor_combFB__ctx_type_0 &_ctx, fix16_t in){
   return extra_CombFB_process(_ctx.filter,in);
};

typedef extra_Processor_combFB__ctx_type_0 extra_Processor_combFB_applyDelay_type;

static_inline void extra_Processor_combFB_applyDelay_init(extra_Processor_combFB__ctx_type_0 &_output_){
   extra_Processor_combFB__ctx_type_0_init(_output_);
   return ;
}

static_inline void extra_Processor_combFB_applyDelay(extra_Processor_combFB__ctx_type_0 &_ctx){
   extra_CombFB_setDelayms(_ctx.filter,_ctx.delayms);
};

typedef extra_Processor_combFB__ctx_type_0 extra_Processor_combFB_setDelay_type;

static_inline void extra_Processor_combFB_setDelay_init(extra_Processor_combFB__ctx_type_0 &_output_){
   extra_Processor_combFB__ctx_type_0_init(_output_);
   return ;
}

static_inline void extra_Processor_combFB_setDelay(extra_Processor_combFB__ctx_type_0 &_ctx, fix16_t newDelay, uint8_t force){
   if(extra_Util_change(_ctx._inst23b,newDelay) || force){
      _ctx.delayms = newDelay;
      extra_Processor_combFB_applyDelay(_ctx);
   }
};

typedef extra_Processor_combFB__ctx_type_0 extra_Processor_combFB_setDecay_type;

static_inline void extra_Processor_combFB_setDecay_init(extra_Processor_combFB__ctx_type_0 &_output_){
   extra_Processor_combFB__ctx_type_0_init(_output_);
   return ;
}

static_inline void extra_Processor_combFB_setDecay(extra_Processor_combFB__ctx_type_0 &_ctx, fix16_t newDecay, uint8_t force){
   if(extra_Util_change(_ctx._inst53b,newDecay) || force){
      extra_CombFB_setDecay(_ctx.filter,newDecay);
   }
};

typedef extra_Processor_combFB__ctx_type_0 extra_Processor_combFB_updateConfig_type;

static_inline void extra_Processor_combFB_updateConfig_init(extra_Processor_combFB__ctx_type_0 &_output_){
   extra_Processor_combFB__ctx_type_0_init(_output_);
   return ;
}

static_inline void extra_Processor_combFB_updateConfig(extra_Processor_combFB__ctx_type_0 &_ctx){
   extra_Processor_combFB_applyDelay(_ctx);
};

typedef extra_Processor_combFB__ctx_type_0 extra_Processor_combFB_setSamplerate_type;

static_inline void extra_Processor_combFB_setSamplerate_init(extra_Processor_combFB__ctx_type_0 &_output_){
   extra_Processor_combFB__ctx_type_0_init(_output_);
   return ;
}

static_inline void extra_Processor_combFB_setSamplerate(extra_Processor_combFB__ctx_type_0 &_ctx, fix16_t newFs){
   if((newFs > 0x0 /* 0.000000 */) && (newFs != _ctx.fs)){
      _ctx.fs = newFs;
      extra_CombFB_setSamplerate(_ctx.filter,_ctx.fs);
   }
};

typedef extra_Processor_combFB__ctx_type_0 extra_Processor_combFB_default_type;

static_inline void extra_Processor_combFB_default_init(extra_Processor_combFB__ctx_type_0 &_output_){
   extra_Processor_combFB__ctx_type_0_init(_output_);
   return ;
}

static_inline void extra_Processor_combFB_default(extra_Processor_combFB__ctx_type_0 &_ctx){
   extra_CombFB_default(_ctx.filter);
   extra_Processor_combFB_setDecay(_ctx,0x8000 /* 0.500000 */,true);
   extra_Processor_combFB_setDelay(_ctx,0x320000 /* 50.000000 */,true);
   extra_Processor_combFB_setSamplerate(_ctx,0x2c1999 /* 44.100000 */);
}

typedef struct extra_Processor_allpass__ctx_type_0 {
   fix16_t fs;
   extra_Allpass__ctx_type_0 filter;
   fix16_t delayms;
   extra_Util__ctx_type_4 _inst53b;
   extra_Util__ctx_type_4 _inst23b;
} extra_Processor_allpass__ctx_type_0;

typedef extra_Processor_allpass__ctx_type_0 extra_Processor_allpass_process_type;

void extra_Processor_allpass__ctx_type_0_init(extra_Processor_allpass__ctx_type_0 &_output_);

static_inline void extra_Processor_allpass_process_init(extra_Processor_allpass__ctx_type_0 &_output_){
   extra_Processor_allpass__ctx_type_0_init(_output_);
   return ;
}

static_inline fix16_t extra_Processor_allpass_process(extra_Processor_allpass__ctx_type_0 &_ctx, fix16_t in){
   return extra_Allpass_process(_ctx.filter,in);
};

typedef extra_Processor_allpass__ctx_type_0 extra_Processor_allpass_applyDelay_type;

static_inline void extra_Processor_allpass_applyDelay_init(extra_Processor_allpass__ctx_type_0 &_output_){
   extra_Processor_allpass__ctx_type_0_init(_output_);
   return ;
}

static_inline void extra_Processor_allpass_applyDelay(extra_Processor_allpass__ctx_type_0 &_ctx){
   extra_Allpass_setDelayms(_ctx.filter,_ctx.delayms);
};

typedef extra_Processor_allpass__ctx_type_0 extra_Processor_allpass_setDelay_type;

static_inline void extra_Processor_allpass_setDelay_init(extra_Processor_allpass__ctx_type_0 &_output_){
   extra_Processor_allpass__ctx_type_0_init(_output_);
   return ;
}

static_inline void extra_Processor_allpass_setDelay(extra_Processor_allpass__ctx_type_0 &_ctx, fix16_t newDelay, uint8_t force){
   if(extra_Util_change(_ctx._inst23b,newDelay) || force){
      _ctx.delayms = newDelay;
      extra_Processor_allpass_applyDelay(_ctx);
   }
};

typedef extra_Processor_allpass__ctx_type_0 extra_Processor_allpass_setDecay_type;

static_inline void extra_Processor_allpass_setDecay_init(extra_Processor_allpass__ctx_type_0 &_output_){
   extra_Processor_allpass__ctx_type_0_init(_output_);
   return ;
}

static_inline void extra_Processor_allpass_setDecay(extra_Processor_allpass__ctx_type_0 &_ctx, fix16_t newDecay, uint8_t force){
   if(extra_Util_change(_ctx._inst53b,newDecay) || force){
      extra_Allpass_setDecay(_ctx.filter,newDecay);
   }
};

typedef extra_Processor_allpass__ctx_type_0 extra_Processor_allpass_updateConfig_type;

static_inline void extra_Processor_allpass_updateConfig_init(extra_Processor_allpass__ctx_type_0 &_output_){
   extra_Processor_allpass__ctx_type_0_init(_output_);
   return ;
}

static_inline void extra_Processor_allpass_updateConfig(extra_Processor_allpass__ctx_type_0 &_ctx){
   extra_Processor_allpass_applyDelay(_ctx);
};

typedef extra_Processor_allpass__ctx_type_0 extra_Processor_allpass_setSamplerate_type;

static_inline void extra_Processor_allpass_setSamplerate_init(extra_Processor_allpass__ctx_type_0 &_output_){
   extra_Processor_allpass__ctx_type_0_init(_output_);
   return ;
}

static_inline void extra_Processor_allpass_setSamplerate(extra_Processor_allpass__ctx_type_0 &_ctx, fix16_t newFs){
   if((newFs > 0x0 /* 0.000000 */) && (newFs != _ctx.fs)){
      _ctx.fs = newFs;
      extra_Allpass_setSamplerate(_ctx.filter,_ctx.fs);
   }
};

typedef extra_Processor_allpass__ctx_type_0 extra_Processor_allpass_default_type;

static_inline void extra_Processor_allpass_default_init(extra_Processor_allpass__ctx_type_0 &_output_){
   extra_Processor_allpass__ctx_type_0_init(_output_);
   return ;
}

static_inline void extra_Processor_allpass_default(extra_Processor_allpass__ctx_type_0 &_ctx){
   extra_Allpass_default(_ctx.filter);
   extra_Processor_allpass_setDecay(_ctx,0x8000 /* 0.500000 */,true);
   extra_Processor_allpass_setDelay(_ctx,0x320000 /* 50.000000 */,true);
   extra_Processor_allpass_setSamplerate(_ctx,0x2c1999 /* 44.100000 */);
}

typedef struct extra_CombFF__ctx_type_0 {
   fix16_t scale;
   int pos;
   fix16_t fs;
   int delay;
   fix16_t decay;
   fix16_t buffer[16384];
} extra_CombFF__ctx_type_0;

typedef extra_CombFF__ctx_type_0 extra_CombFF_process_type;

void extra_CombFF__ctx_type_0_init(extra_CombFF__ctx_type_0 &_output_);

static_inline void extra_CombFF_process_init(extra_CombFF__ctx_type_0 &_output_){
   extra_CombFF__ctx_type_0_init(_output_);
   return ;
}

fix16_t extra_CombFF_process(extra_CombFF__ctx_type_0 &_ctx, fix16_t sample);

typedef extra_CombFF__ctx_type_0 extra_CombFF_process_bufferTo_type;

static_inline void extra_CombFF_process_bufferTo_init(extra_CombFF__ctx_type_0 &_output_){
   extra_CombFF__ctx_type_0_init(_output_);
   return ;
}

void extra_CombFF_process_bufferTo(extra_CombFF__ctx_type_0 &_ctx, int nb, fix16_t (&input)[128], fix16_t (&oBuffer)[128]);

typedef extra_CombFF__ctx_type_0 extra_CombFF_setDecay_type;

static_inline void extra_CombFF_setDecay_init(extra_CombFF__ctx_type_0 &_output_){
   extra_CombFF__ctx_type_0_init(_output_);
   return ;
}

static_inline void extra_CombFF_setDecay(extra_CombFF__ctx_type_0 &_ctx, fix16_t newDecay){
   _ctx.decay = fix_clip(newDecay,0x0 /* 0.000000 */,0x10000 /* 1.000000 */);
   _ctx.scale = fix_div(0x10000 /* 1.000000 */,(0x10000 /* 1.000000 */ + _ctx.decay));
}

typedef extra_CombFF__ctx_type_0 extra_CombFF_getMaxDelay_type;

static_inline void extra_CombFF_getMaxDelay_init(extra_CombFF__ctx_type_0 &_output_){
   extra_CombFF__ctx_type_0_init(_output_);
   return ;
}

static_inline int extra_CombFF_getMaxDelay(extra_CombFF__ctx_type_0 &_ctx){
   return 16384;
};

typedef extra_CombFF__ctx_type_0 extra_CombFF_getMaxDelayms_type;

static_inline void extra_CombFF_getMaxDelayms_init(extra_CombFF__ctx_type_0 &_output_){
   extra_CombFF__ctx_type_0_init(_output_);
   return ;
}

static_inline fix16_t extra_CombFF_getMaxDelayms(extra_CombFF__ctx_type_0 &_ctx){
   if(_ctx.fs <= 0x0 /* 0.000000 */){
      return 0x0 /* 0.000000 */;
   }
   return fix_div(0x40000000 /* 16384.000000 */,_ctx.fs);
}

typedef extra_CombFF__ctx_type_0 extra_CombFF_setDelay_type;

static_inline void extra_CombFF_setDelay_init(extra_CombFF__ctx_type_0 &_output_){
   extra_CombFF__ctx_type_0_init(_output_);
   return ;
}

static_inline void extra_CombFF_setDelay(extra_CombFF__ctx_type_0 &_ctx, int newDelay){
   _ctx.delay = int_clip(newDelay,1,extra_CombFF_getMaxDelay(_ctx));
   _ctx.pos = (_ctx.pos % _ctx.delay);
}

typedef extra_CombFF__ctx_type_0 extra_CombFF_setDelayms_type;

static_inline void extra_CombFF_setDelayms_init(extra_CombFF__ctx_type_0 &_output_){
   extra_CombFF__ctx_type_0_init(_output_);
   return ;
}

static_inline void extra_CombFF_setDelayms(extra_CombFF__ctx_type_0 &_ctx, fix16_t delayms){
   extra_CombFF_setDelay(_ctx,fix_to_int(fix_mul(_ctx.fs,delayms)));
};

typedef extra_CombFF__ctx_type_0 extra_CombFF_setSamplerate_type;

static_inline void extra_CombFF_setSamplerate_init(extra_CombFF__ctx_type_0 &_output_){
   extra_CombFF__ctx_type_0_init(_output_);
   return ;
}

static_inline void extra_CombFF_setSamplerate(extra_CombFF__ctx_type_0 &_ctx, fix16_t newFs){
   if(newFs > 0x0 /* 0.000000 */){
      _ctx.fs = newFs;
   }
};

typedef extra_CombFF__ctx_type_0 extra_CombFF_default_type;

static_inline void extra_CombFF_default_init(extra_CombFF__ctx_type_0 &_output_){
   extra_CombFF__ctx_type_0_init(_output_);
   return ;
}

static_inline void extra_CombFF_default(extra_CombFF__ctx_type_0 &_ctx){
   extra_Buffer_buffer_large(_ctx.buffer);
   extra_CombFF_setSamplerate(_ctx,0x2c1999 /* 44.100000 */);
   extra_CombFF_setDelayms(_ctx,0x320000 /* 50.000000 */);
   extra_CombFF_setDecay(_ctx,0x8000 /* 0.500000 */);
}

typedef struct extra_CombFF__ctx_type_1 {
   extra_CombFF__ctx_type_0 _inst115;
} extra_CombFF__ctx_type_1;

typedef extra_CombFF__ctx_type_1 extra_CombFF_dummy_type;

static_inline void extra_CombFF__ctx_type_1_init(extra_CombFF__ctx_type_1 &_output_){
   extra_CombFF__ctx_type_1 _ctx;
   extra_CombFF__ctx_type_0_init(_ctx._inst115);
   _output_ = _ctx;
   return ;
}

static_inline void extra_CombFF_dummy_init(extra_CombFF__ctx_type_1 &_output_){
   extra_CombFF__ctx_type_1_init(_output_);
   return ;
}

static_inline void extra_CombFF_dummy(extra_CombFF__ctx_type_1 &_ctx){
   fix16_t buff[128];
   extra_Buffer_buffer(buff);
   extra_CombFF_process_bufferTo(_ctx._inst115,0,buff,buff);
}

typedef struct extra_Processor_combFF__ctx_type_0 {
   fix16_t fs;
   extra_CombFF__ctx_type_0 filter;
   fix16_t delayms;
   extra_Util__ctx_type_4 _inst53b;
   extra_Util__ctx_type_4 _inst23b;
} extra_Processor_combFF__ctx_type_0;

typedef extra_Processor_combFF__ctx_type_0 extra_Processor_combFF_process_type;

void extra_Processor_combFF__ctx_type_0_init(extra_Processor_combFF__ctx_type_0 &_output_);

static_inline void extra_Processor_combFF_process_init(extra_Processor_combFF__ctx_type_0 &_output_){
   extra_Processor_combFF__ctx_type_0_init(_output_);
   return ;
}

static_inline fix16_t extra_Processor_combFF_process(extra_Processor_combFF__ctx_type_0 &_ctx, fix16_t in){
   return extra_CombFF_process(_ctx.filter,in);
};

typedef extra_Processor_combFF__ctx_type_0 extra_Processor_combFF_applyDelay_type;

static_inline void extra_Processor_combFF_applyDelay_init(extra_Processor_combFF__ctx_type_0 &_output_){
   extra_Processor_combFF__ctx_type_0_init(_output_);
   return ;
}

static_inline void extra_Processor_combFF_applyDelay(extra_Processor_combFF__ctx_type_0 &_ctx){
   extra_CombFF_setDelayms(_ctx.filter,_ctx.delayms);
};

typedef extra_Processor_combFF__ctx_type_0 extra_Processor_combFF_setDelay_type;

static_inline void extra_Processor_combFF_setDelay_init(extra_Processor_combFF__ctx_type_0 &_output_){
   extra_Processor_combFF__ctx_type_0_init(_output_);
   return ;
}

static_inline void extra_Processor_combFF_setDelay(extra_Processor_combFF__ctx_type_0 &_ctx, fix16_t newDelay, uint8_t force){
   if(extra_Util_change(_ctx._inst23b,newDelay) || force){
      _ctx.delayms = newDelay;
      extra_Processor_combFF_applyDelay(_ctx);
   }
};

typedef extra_Processor_combFF__ctx_type_0 extra_Processor_combFF_setDecay_type;

static_inline void extra_Processor_combFF_setDecay_init(extra_Processor_combFF__ctx_type_0 &_output_){
   extra_Processor_combFF__ctx_type_0_init(_output_);
   return ;
}

static_inline void extra_Processor_combFF_setDecay(extra_Processor_combFF__ctx_type_0 &_ctx, fix16_t newDecay, uint8_t force){
   if(extra_Util_change(_ctx._inst53b,newDecay) || force){
      extra_CombFF_setDecay(_ctx.filter,newDecay);
   }
};

typedef extra_Processor_combFF__ctx_type_0 extra_Processor_combFF_updateConfig_type;

static_inline void extra_Processor_combFF_updateConfig_init(extra_Processor_combFF__ctx_type_0 &_output_){
   extra_Processor_combFF__ctx_type_0_init(_output_);
   return ;
}

static_inline void extra_Processor_combFF_updateConfig(extra_Processor_combFF__ctx_type_0 &_ctx){
   extra_Processor_combFF_applyDelay(_ctx);
};

typedef extra_Processor_combFF__ctx_type_0 extra_Processor_combFF_setSamplerate_type;

static_inline void extra_Processor_combFF_setSamplerate_init(extra_Processor_combFF__ctx_type_0 &_output_){
   extra_Processor_combFF__ctx_type_0_init(_output_);
   return ;
}

static_inline void extra_Processor_combFF_setSamplerate(extra_Processor_combFF__ctx_type_0 &_ctx, fix16_t newFs){
   if((newFs > 0x0 /* 0.000000 */) && (newFs != _ctx.fs)){
      _ctx.fs = newFs;
      extra_CombFF_setSamplerate(_ctx.filter,_ctx.fs);
   }
};

typedef extra_Processor_combFF__ctx_type_0 extra_Processor_combFF_default_type;

static_inline void extra_Processor_combFF_default_init(extra_Processor_combFF__ctx_type_0 &_output_){
   extra_Processor_combFF__ctx_type_0_init(_output_);
   return ;
}

static_inline void extra_Processor_combFF_default(extra_Processor_combFF__ctx_type_0 &_ctx){
   extra_CombFF_default(_ctx.filter);
   extra_Processor_combFF_setDecay(_ctx,0x8000 /* 0.500000 */,true);
   extra_Processor_combFF_setDelay(_ctx,0x320000 /* 50.000000 */,true);
   extra_Processor_combFF_setSamplerate(_ctx,0x2c1999 /* 44.100000 */);
}



#endif // ENGINE_EFFECTS_EXTRA_H
