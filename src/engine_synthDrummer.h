
/* Code automatically generated by Vult https://github.com/modlfo/vult */
#ifndef ENGINE_SYNTHDRUMMER_H
#define ENGINE_SYNTHDRUMMER_H
#include <stdint.h>
#include <math.h>
#include "vultin.h"
#include "engine_synthDrummer.tables.h"

static_inline fix16_t synthDrummer_Util_noteToFrequency(int note){
   return fix_mul(0x217 /* 0.008176 */,fix_exp(fix_mul(0xec9 /* 0.057762 */,int_to_fix(note))));
};

static_inline fix16_t synthDrummer_Util_tonesToCoeff(fix16_t semitones){
   fix16_t log_base;
   log_base = 0xb172 /* 0.693147 */;
   return fix_exp(fix_mul(fix_mul(0x1555 /* 0.083333 */,log_base),semitones));
}

typedef struct synthDrummer_Util__ctx_type_2 {
   uint8_t pre;
} synthDrummer_Util__ctx_type_2;

typedef synthDrummer_Util__ctx_type_2 synthDrummer_Util_edge_type;

static_inline void synthDrummer_Util__ctx_type_2_init(synthDrummer_Util__ctx_type_2 &_output_){
   synthDrummer_Util__ctx_type_2 _ctx;
   _ctx.pre = false;
   _output_ = _ctx;
   return ;
}

static_inline void synthDrummer_Util_edge_init(synthDrummer_Util__ctx_type_2 &_output_){
   synthDrummer_Util__ctx_type_2_init(_output_);
   return ;
}

static_inline uint8_t synthDrummer_Util_edge(synthDrummer_Util__ctx_type_2 &_ctx, uint8_t x){
   uint8_t ret;
   ret = (x && bool_not(_ctx.pre));
   _ctx.pre = x;
   return ret;
}

static_inline fix16_t synthDrummer_Util_cubic_clipper(fix16_t x){
   if(x <= -0xaaaa /* -0.666667 */){
      return -0xaaaa /* -0.666667 */;
   }
   else
   {
      if(x >= 0xaaaa /* 0.666667 */){
         return 0xaaaa /* 0.666667 */;
      }
      else
      {
         return (x + fix_mul(fix_mul(fix_mul(-0x5555 /* -0.333333 */,x),x),x));
      }
   }
};

typedef struct synthDrummer_Util__ctx_type_4 {
   fix16_t pre_x;
} synthDrummer_Util__ctx_type_4;

typedef synthDrummer_Util__ctx_type_4 synthDrummer_Util_change_type;

static_inline void synthDrummer_Util__ctx_type_4_init(synthDrummer_Util__ctx_type_4 &_output_){
   synthDrummer_Util__ctx_type_4 _ctx;
   _ctx.pre_x = 0x0 /* 0.000000 */;
   _output_ = _ctx;
   return ;
}

static_inline void synthDrummer_Util_change_init(synthDrummer_Util__ctx_type_4 &_output_){
   synthDrummer_Util__ctx_type_4_init(_output_);
   return ;
}

static_inline uint8_t synthDrummer_Util_change(synthDrummer_Util__ctx_type_4 &_ctx, fix16_t x){
   uint8_t v;
   v = (_ctx.pre_x != x);
   _ctx.pre_x = x;
   return v;
}

typedef struct synthDrummer_Util__ctx_type_5 {
   fix16_t x;
} synthDrummer_Util__ctx_type_5;

typedef synthDrummer_Util__ctx_type_5 synthDrummer_Util_smooth_type;

static_inline void synthDrummer_Util__ctx_type_5_init(synthDrummer_Util__ctx_type_5 &_output_){
   synthDrummer_Util__ctx_type_5 _ctx;
   _ctx.x = 0x0 /* 0.000000 */;
   _output_ = _ctx;
   return ;
}

static_inline void synthDrummer_Util_smooth_init(synthDrummer_Util__ctx_type_5 &_output_){
   synthDrummer_Util__ctx_type_5_init(_output_);
   return ;
}

static_inline fix16_t synthDrummer_Util_smooth(synthDrummer_Util__ctx_type_5 &_ctx, fix16_t input, fix16_t coeff){
   _ctx.x = (_ctx.x + fix_mul(coeff,(input + (- _ctx.x))));
   return _ctx.x;
}

static_inline fix16_t synthDrummer_Util_velocityToLevel(int velocity){
   velocity = int_clip(velocity,0,127);
   return fix_mul(0x204 /* 0.007874 */,int_to_fix(velocity));
}

static_inline int synthDrummer_DrummerWrapper_drumkit_samples(){
   return 107178;
};

static_inline fix16_t synthDrummer_DrummerWrapper_drumkit(int channel, int index){
   if(channel == 0){
      return fix_wrap_array(synthDrummer_DrummerWrapper_drumkit_chan_0)[(index % 107178)];
   }
   return 0x0 /* 0.000000 */;
}

static_inline fix16_t synthDrummer_DrummerWrapper_getSample(int index){
   return synthDrummer_DrummerWrapper_drumkit(0,index);
};

static_inline int synthDrummer_DrummerWrapper_getSampleSize(){
   return synthDrummer_DrummerWrapper_drumkit_samples();
};

static_inline fix16_t synthDrummer_DrummerWrapper_getSampleFs(){
   return 0x1e0000 /* 30.000000 */;
};

void synthDrummer_DrummerWrapper_getSlicesStart(int (&_output_)[12]);

void synthDrummer_DrummerWrapper_getSlicesEnd(int (&_output_)[12]);

static_inline void synthDrummer_Buffer_buffer(fix16_t (&oBuff)[128]){
}

void synthDrummer_Buffer_buffer_large(fix16_t (&oBuff)[2048]);

static_inline int synthDrummer_Buffer_bufferSize(){
   return 128;
};

static_inline int synthDrummer_Buffer_bufferLargeSize(){
   return 2048;
};

typedef struct synthDrummer_Drummer__ctx_type_0 {
   fix16_t step;
   int slices_start[12];
   int slices_end[12];
   int slice;
   int size;
   fix16_t sampleFs;
   uint8_t quickKill;
   fix16_t qkStep;
   int posBase;
   fix16_t pos;
   fix16_t noteRatio;
   int nextVelocity;
   int nextNote;
   fix16_t level;
   fix16_t fsRatio;
   fix16_t fs;
   fix16_t buffer_o[128];
   fix16_t bend;
} synthDrummer_Drummer__ctx_type_0;

typedef synthDrummer_Drummer__ctx_type_0 synthDrummer_Drummer_updateStep_type;

void synthDrummer_Drummer__ctx_type_0_init(synthDrummer_Drummer__ctx_type_0 &_output_);

static_inline void synthDrummer_Drummer_updateStep_init(synthDrummer_Drummer__ctx_type_0 &_output_){
   synthDrummer_Drummer__ctx_type_0_init(_output_);
   return ;
}

static_inline void synthDrummer_Drummer_updateStep(synthDrummer_Drummer__ctx_type_0 &_ctx){
   _ctx.step = fix_mul(_ctx.fsRatio,_ctx.noteRatio);
   if(_ctx.bend != 0x0 /* 0.000000 */){
      _ctx.step = fix_mul(_ctx.step,synthDrummer_Util_tonesToCoeff(_ctx.bend));
   }
}

typedef synthDrummer_Drummer__ctx_type_0 synthDrummer_Drummer_pitchBend_type;

static_inline void synthDrummer_Drummer_pitchBend_init(synthDrummer_Drummer__ctx_type_0 &_output_){
   synthDrummer_Drummer__ctx_type_0_init(_output_);
   return ;
}

static_inline void synthDrummer_Drummer_pitchBend(synthDrummer_Drummer__ctx_type_0 &_ctx, fix16_t semitones){
   if(semitones != _ctx.bend){
      _ctx.bend = semitones;
      synthDrummer_Drummer_updateStep(_ctx);
   }
};

typedef synthDrummer_Drummer__ctx_type_0 synthDrummer_Drummer_setNote_type;

static_inline void synthDrummer_Drummer_setNote_init(synthDrummer_Drummer__ctx_type_0 &_output_){
   synthDrummer_Drummer__ctx_type_0_init(_output_);
   return ;
}

void synthDrummer_Drummer_setNote(synthDrummer_Drummer__ctx_type_0 &_ctx, int note);

typedef synthDrummer_Drummer__ctx_type_0 synthDrummer_Drummer_setLevel_type;

static_inline void synthDrummer_Drummer_setLevel_init(synthDrummer_Drummer__ctx_type_0 &_output_){
   synthDrummer_Drummer__ctx_type_0_init(_output_);
   return ;
}

static_inline void synthDrummer_Drummer_setLevel(synthDrummer_Drummer__ctx_type_0 &_ctx, fix16_t newLevel){
   _ctx.level = newLevel;
};

typedef synthDrummer_Drummer__ctx_type_0 synthDrummer_Drummer_process_type;

static_inline void synthDrummer_Drummer_process_init(synthDrummer_Drummer__ctx_type_0 &_output_){
   synthDrummer_Drummer__ctx_type_0_init(_output_);
   return ;
}

fix16_t synthDrummer_Drummer_process(synthDrummer_Drummer__ctx_type_0 &_ctx);

typedef synthDrummer_Drummer__ctx_type_0 synthDrummer_Drummer_process_bufferTo_type;

static_inline void synthDrummer_Drummer_process_bufferTo_init(synthDrummer_Drummer__ctx_type_0 &_output_){
   synthDrummer_Drummer__ctx_type_0_init(_output_);
   return ;
}

void synthDrummer_Drummer_process_bufferTo(synthDrummer_Drummer__ctx_type_0 &_ctx, int nb, fix16_t (&oBuffer)[128]);

typedef synthDrummer_Drummer__ctx_type_0 synthDrummer_Drummer_process_buffer_type;

static_inline void synthDrummer_Drummer_process_buffer_init(synthDrummer_Drummer__ctx_type_0 &_output_){
   synthDrummer_Drummer__ctx_type_0_init(_output_);
   return ;
}

static_inline void synthDrummer_Drummer_process_buffer(synthDrummer_Drummer__ctx_type_0 &_ctx, int nb){
   synthDrummer_Drummer_process_bufferTo(_ctx,nb,_ctx.buffer_o);
};

typedef synthDrummer_Drummer__ctx_type_0 synthDrummer_Drummer_setSlices_type;

static_inline void synthDrummer_Drummer_setSlices_init(synthDrummer_Drummer__ctx_type_0 &_output_){
   synthDrummer_Drummer__ctx_type_0_init(_output_);
   return ;
}

void synthDrummer_Drummer_setSlices(synthDrummer_Drummer__ctx_type_0 &_ctx, int (&newSlicesStart)[12], int (&newSlicesEnd)[12]);

typedef synthDrummer_Drummer__ctx_type_0 synthDrummer_Drummer_setSamplerate_type;

static_inline void synthDrummer_Drummer_setSamplerate_init(synthDrummer_Drummer__ctx_type_0 &_output_){
   synthDrummer_Drummer__ctx_type_0_init(_output_);
   return ;
}

void synthDrummer_Drummer_setSamplerate(synthDrummer_Drummer__ctx_type_0 &_ctx, fix16_t newFs);

typedef synthDrummer_Drummer__ctx_type_0 synthDrummer_Drummer_getSampleSize_type;

static_inline void synthDrummer_Drummer_getSampleSize_init(synthDrummer_Drummer__ctx_type_0 &_output_){
   synthDrummer_Drummer__ctx_type_0_init(_output_);
   return ;
}

static_inline int synthDrummer_Drummer_getSampleSize(synthDrummer_Drummer__ctx_type_0 &_ctx){
   return _ctx.size;
};

typedef synthDrummer_Drummer__ctx_type_0 synthDrummer_Drummer_setSustain_type;

static_inline void synthDrummer_Drummer_setSustain_init(synthDrummer_Drummer__ctx_type_0 &_output_){
   synthDrummer_Drummer__ctx_type_0_init(_output_);
   return ;
}

static_inline void synthDrummer_Drummer_setSustain(synthDrummer_Drummer__ctx_type_0 &_ctx, uint8_t flag){
}

typedef synthDrummer_Drummer__ctx_type_0 synthDrummer_Drummer_noteOn_type;

static_inline void synthDrummer_Drummer_noteOn_init(synthDrummer_Drummer__ctx_type_0 &_output_){
   synthDrummer_Drummer__ctx_type_0_init(_output_);
   return ;
}

uint8_t synthDrummer_Drummer_noteOn(synthDrummer_Drummer__ctx_type_0 &_ctx, int note, int velocity, int channel);

typedef synthDrummer_Drummer__ctx_type_0 synthDrummer_Drummer_noteOff_type;

static_inline void synthDrummer_Drummer_noteOff_init(synthDrummer_Drummer__ctx_type_0 &_output_){
   synthDrummer_Drummer__ctx_type_0_init(_output_);
   return ;
}

static_inline void synthDrummer_Drummer_noteOff(synthDrummer_Drummer__ctx_type_0 &_ctx, int note, int channel){
}

typedef synthDrummer_Drummer__ctx_type_0 synthDrummer_Drummer_default_type;

static_inline void synthDrummer_Drummer_default_init(synthDrummer_Drummer__ctx_type_0 &_output_){
   synthDrummer_Drummer__ctx_type_0_init(_output_);
   return ;
}

void synthDrummer_Drummer_default(synthDrummer_Drummer__ctx_type_0 &_ctx);

typedef struct synthDrummer_Drummer__ctx_type_1 {
   synthDrummer_Drummer__ctx_type_0 _inst1b;
} synthDrummer_Drummer__ctx_type_1;

typedef synthDrummer_Drummer__ctx_type_1 synthDrummer_Drummer_dummy_type;

static_inline void synthDrummer_Drummer__ctx_type_1_init(synthDrummer_Drummer__ctx_type_1 &_output_){
   synthDrummer_Drummer__ctx_type_1 _ctx;
   synthDrummer_Drummer__ctx_type_0_init(_ctx._inst1b);
   _output_ = _ctx;
   return ;
}

static_inline void synthDrummer_Drummer_dummy_init(synthDrummer_Drummer__ctx_type_1 &_output_){
   synthDrummer_Drummer__ctx_type_1_init(_output_);
   return ;
}

static_inline void synthDrummer_Drummer_dummy(synthDrummer_Drummer__ctx_type_1 &_ctx){
   fix16_t buff[128];
   synthDrummer_Buffer_buffer(buff);
   synthDrummer_Drummer_process_bufferTo(_ctx._inst1b,0,buff);
}

typedef struct synthDrummer_Poly__ctx_type_0 {
   synthDrummer_Drummer__ctx_type_0 voice3;
   synthDrummer_Drummer__ctx_type_0 voice2;
   synthDrummer_Drummer__ctx_type_0 voice1;
   synthDrummer_Drummer__ctx_type_0 voice0;
   uint8_t should_leftovers;
} synthDrummer_Poly__ctx_type_0;

typedef synthDrummer_Poly__ctx_type_0 synthDrummer_Poly_getSample_type;

void synthDrummer_Poly__ctx_type_0_init(synthDrummer_Poly__ctx_type_0 &_output_);

static_inline void synthDrummer_Poly_getSample_init(synthDrummer_Poly__ctx_type_0 &_output_){
   synthDrummer_Poly__ctx_type_0_init(_output_);
   return ;
}

fix16_t synthDrummer_Poly_getSample(synthDrummer_Poly__ctx_type_0 &_ctx, int voice);

typedef synthDrummer_Poly__ctx_type_0 synthDrummer_Poly_runVoice_type;

static_inline void synthDrummer_Poly_runVoice_init(synthDrummer_Poly__ctx_type_0 &_output_){
   synthDrummer_Poly__ctx_type_0_init(_output_);
   return ;
}

static_inline void synthDrummer_Poly_runVoice(synthDrummer_Poly__ctx_type_0 &_ctx, int voice, int nb, fix16_t (&buff)[128]){
   switch(voice) {
      case 0:
         synthDrummer_Drummer_process_bufferTo(_ctx.voice0,nb,buff);
      break;
      case 1:
         synthDrummer_Drummer_process_bufferTo(_ctx.voice1,nb,buff);
      break;
      case 2:
         synthDrummer_Drummer_process_bufferTo(_ctx.voice2,nb,buff);
      break;
      case 3:
         synthDrummer_Drummer_process_bufferTo(_ctx.voice3,nb,buff);
      break;
    
   }
};

typedef synthDrummer_Poly__ctx_type_0 synthDrummer_Poly_sendNoteOn_type;

static_inline void synthDrummer_Poly_sendNoteOn_init(synthDrummer_Poly__ctx_type_0 &_output_){
   synthDrummer_Poly__ctx_type_0_init(_output_);
   return ;
}

static_inline void synthDrummer_Poly_sendNoteOn(synthDrummer_Poly__ctx_type_0 &_ctx, int voice, int note, int velocity, int channel){
   switch(voice) {
      case 0:
         synthDrummer_Drummer_noteOn(_ctx.voice0,note,velocity,channel);
      break;
      case 1:
         synthDrummer_Drummer_noteOn(_ctx.voice1,note,velocity,channel);
      break;
      case 2:
         synthDrummer_Drummer_noteOn(_ctx.voice2,note,velocity,channel);
      break;
      case 3:
         synthDrummer_Drummer_noteOn(_ctx.voice3,note,velocity,channel);
      break;
    
   }
};

typedef synthDrummer_Poly__ctx_type_0 synthDrummer_Poly_sendNoteOff_type;

static_inline void synthDrummer_Poly_sendNoteOff_init(synthDrummer_Poly__ctx_type_0 &_output_){
   synthDrummer_Poly__ctx_type_0_init(_output_);
   return ;
}

static_inline void synthDrummer_Poly_sendNoteOff(synthDrummer_Poly__ctx_type_0 &_ctx, int voice, int note, int channel){
   switch(voice) {
      case 0:
         synthDrummer_Drummer_noteOff(_ctx.voice0,note,channel);
      break;
      case 1:
         synthDrummer_Drummer_noteOff(_ctx.voice1,note,channel);
      break;
      case 2:
         synthDrummer_Drummer_noteOff(_ctx.voice2,note,channel);
      break;
      case 3:
         synthDrummer_Drummer_noteOff(_ctx.voice3,note,channel);
      break;
    
   }
};

typedef synthDrummer_Poly__ctx_type_0 synthDrummer_Poly_setSamplerate_type;

static_inline void synthDrummer_Poly_setSamplerate_init(synthDrummer_Poly__ctx_type_0 &_output_){
   synthDrummer_Poly__ctx_type_0_init(_output_);
   return ;
}

static_inline void synthDrummer_Poly_setSamplerate(synthDrummer_Poly__ctx_type_0 &_ctx, fix16_t fs){
   synthDrummer_Drummer_setSamplerate(_ctx.voice0,fs);
   synthDrummer_Drummer_setSamplerate(_ctx.voice1,fs);
   synthDrummer_Drummer_setSamplerate(_ctx.voice2,fs);
   synthDrummer_Drummer_setSamplerate(_ctx.voice3,fs);
}

typedef synthDrummer_Poly__ctx_type_0 synthDrummer_Poly_synthSetSustain_type;

static_inline void synthDrummer_Poly_synthSetSustain_init(synthDrummer_Poly__ctx_type_0 &_output_){
   synthDrummer_Poly__ctx_type_0_init(_output_);
   return ;
}

static_inline void synthDrummer_Poly_synthSetSustain(synthDrummer_Poly__ctx_type_0 &_ctx, uint8_t flag){
   synthDrummer_Drummer_setSustain(_ctx.voice0,flag);
   synthDrummer_Drummer_setSustain(_ctx.voice1,flag);
   synthDrummer_Drummer_setSustain(_ctx.voice2,flag);
   synthDrummer_Drummer_setSustain(_ctx.voice3,flag);
}

typedef synthDrummer_Poly__ctx_type_0 synthDrummer_Poly_synthPitchBend_type;

static_inline void synthDrummer_Poly_synthPitchBend_init(synthDrummer_Poly__ctx_type_0 &_output_){
   synthDrummer_Poly__ctx_type_0_init(_output_);
   return ;
}

static_inline void synthDrummer_Poly_synthPitchBend(synthDrummer_Poly__ctx_type_0 &_ctx, fix16_t semitones){
   synthDrummer_Drummer_pitchBend(_ctx.voice0,semitones);
   synthDrummer_Drummer_pitchBend(_ctx.voice1,semitones);
   synthDrummer_Drummer_pitchBend(_ctx.voice2,semitones);
   synthDrummer_Drummer_pitchBend(_ctx.voice3,semitones);
}

typedef synthDrummer_Poly__ctx_type_0 synthDrummer_Poly_synthSetLoop_type;

static_inline void synthDrummer_Poly_synthSetLoop_init(synthDrummer_Poly__ctx_type_0 &_output_){
   synthDrummer_Poly__ctx_type_0_init(_output_);
   return ;
}

static_inline void synthDrummer_Poly_synthSetLoop(synthDrummer_Poly__ctx_type_0 &_ctx, uint8_t flag){
}

typedef synthDrummer_Poly__ctx_type_0 synthDrummer_Poly_synthSetLoopStart_type;

static_inline void synthDrummer_Poly_synthSetLoopStart_init(synthDrummer_Poly__ctx_type_0 &_output_){
   synthDrummer_Poly__ctx_type_0_init(_output_);
   return ;
}

static_inline void synthDrummer_Poly_synthSetLoopStart(synthDrummer_Poly__ctx_type_0 &_ctx, int value){
}

typedef synthDrummer_Poly__ctx_type_0 synthDrummer_Poly_synthSetLoopEnd_type;

static_inline void synthDrummer_Poly_synthSetLoopEnd_init(synthDrummer_Poly__ctx_type_0 &_output_){
   synthDrummer_Poly__ctx_type_0_init(_output_);
   return ;
}

static_inline void synthDrummer_Poly_synthSetLoopEnd(synthDrummer_Poly__ctx_type_0 &_ctx, int value){
}

typedef synthDrummer_Poly__ctx_type_0 synthDrummer_Poly_synthGetLoop_type;

static_inline void synthDrummer_Poly_synthGetLoop_init(synthDrummer_Poly__ctx_type_0 &_output_){
   synthDrummer_Poly__ctx_type_0_init(_output_);
   return ;
}

static_inline uint8_t synthDrummer_Poly_synthGetLoop(synthDrummer_Poly__ctx_type_0 &_ctx){
   return false;
};

typedef synthDrummer_Poly__ctx_type_0 synthDrummer_Poly_synthGetLoopStart_type;

static_inline void synthDrummer_Poly_synthGetLoopStart_init(synthDrummer_Poly__ctx_type_0 &_output_){
   synthDrummer_Poly__ctx_type_0_init(_output_);
   return ;
}

static_inline int synthDrummer_Poly_synthGetLoopStart(synthDrummer_Poly__ctx_type_0 &_ctx){
   return 0;
};

typedef synthDrummer_Poly__ctx_type_0 synthDrummer_Poly_synthGetLoopEnd_type;

static_inline void synthDrummer_Poly_synthGetLoopEnd_init(synthDrummer_Poly__ctx_type_0 &_output_){
   synthDrummer_Poly__ctx_type_0_init(_output_);
   return ;
}

static_inline int synthDrummer_Poly_synthGetLoopEnd(synthDrummer_Poly__ctx_type_0 &_ctx){
   return 0;
};

typedef synthDrummer_Poly__ctx_type_0 synthDrummer_Poly_synthGetSize_type;

static_inline void synthDrummer_Poly_synthGetSize_init(synthDrummer_Poly__ctx_type_0 &_output_){
   synthDrummer_Poly__ctx_type_0_init(_output_);
   return ;
}

static_inline int synthDrummer_Poly_synthGetSize(synthDrummer_Poly__ctx_type_0 &_ctx){
   return 0;
};

typedef synthDrummer_Poly__ctx_type_0 synthDrummer_Poly_synthGetNbWavetables_type;

static_inline void synthDrummer_Poly_synthGetNbWavetables_init(synthDrummer_Poly__ctx_type_0 &_output_){
   synthDrummer_Poly__ctx_type_0_init(_output_);
   return ;
}

static_inline int synthDrummer_Poly_synthGetNbWavetables(synthDrummer_Poly__ctx_type_0 &_ctx){
   return 0;
};

typedef synthDrummer_Poly__ctx_type_0 synthDrummer_Poly_synthSetModulatorWavetable_type;

static_inline void synthDrummer_Poly_synthSetModulatorWavetable_init(synthDrummer_Poly__ctx_type_0 &_output_){
   synthDrummer_Poly__ctx_type_0_init(_output_);
   return ;
}

static_inline void synthDrummer_Poly_synthSetModulatorWavetable(synthDrummer_Poly__ctx_type_0 &_ctx, fix16_t wavetableIdx){
}

typedef synthDrummer_Poly__ctx_type_0 synthDrummer_Poly_synthSetModulatorWavetablePhase_type;

static_inline void synthDrummer_Poly_synthSetModulatorWavetablePhase_init(synthDrummer_Poly__ctx_type_0 &_output_){
   synthDrummer_Poly__ctx_type_0_init(_output_);
   return ;
}

static_inline void synthDrummer_Poly_synthSetModulatorWavetablePhase(synthDrummer_Poly__ctx_type_0 &_ctx, fix16_t phaseIdx){
}

typedef synthDrummer_Poly__ctx_type_0 synthDrummer_Poly_synthSetCarrierWavetable_type;

static_inline void synthDrummer_Poly_synthSetCarrierWavetable_init(synthDrummer_Poly__ctx_type_0 &_output_){
   synthDrummer_Poly__ctx_type_0_init(_output_);
   return ;
}

static_inline void synthDrummer_Poly_synthSetCarrierWavetable(synthDrummer_Poly__ctx_type_0 &_ctx, fix16_t wavetableIdx){
}

typedef synthDrummer_Poly__ctx_type_0 synthDrummer_Poly_synthSetCarrierWavetablePhase_type;

static_inline void synthDrummer_Poly_synthSetCarrierWavetablePhase_init(synthDrummer_Poly__ctx_type_0 &_output_){
   synthDrummer_Poly__ctx_type_0_init(_output_);
   return ;
}

static_inline void synthDrummer_Poly_synthSetCarrierWavetablePhase(synthDrummer_Poly__ctx_type_0 &_ctx, fix16_t phaseIdx){
}

typedef synthDrummer_Poly__ctx_type_0 synthDrummer_Poly_synthSetModulatorRatio_type;

static_inline void synthDrummer_Poly_synthSetModulatorRatio_init(synthDrummer_Poly__ctx_type_0 &_output_){
   synthDrummer_Poly__ctx_type_0_init(_output_);
   return ;
}

static_inline void synthDrummer_Poly_synthSetModulatorRatio(synthDrummer_Poly__ctx_type_0 &_ctx, fix16_t ratio){
}

typedef synthDrummer_Poly__ctx_type_0 synthDrummer_Poly_synthSetCarrierRatio_type;

static_inline void synthDrummer_Poly_synthSetCarrierRatio_init(synthDrummer_Poly__ctx_type_0 &_output_){
   synthDrummer_Poly__ctx_type_0_init(_output_);
   return ;
}

static_inline void synthDrummer_Poly_synthSetCarrierRatio(synthDrummer_Poly__ctx_type_0 &_ctx, fix16_t ratio){
}

typedef synthDrummer_Poly__ctx_type_0 synthDrummer_Poly_synthSetModulatorLevel_type;

static_inline void synthDrummer_Poly_synthSetModulatorLevel_init(synthDrummer_Poly__ctx_type_0 &_output_){
   synthDrummer_Poly__ctx_type_0_init(_output_);
   return ;
}

static_inline void synthDrummer_Poly_synthSetModulatorLevel(synthDrummer_Poly__ctx_type_0 &_ctx, fix16_t level){
}

typedef synthDrummer_Poly__ctx_type_0 synthDrummer_Poly_synthSetModulatorTargetLevel_type;

static_inline void synthDrummer_Poly_synthSetModulatorTargetLevel_init(synthDrummer_Poly__ctx_type_0 &_output_){
   synthDrummer_Poly__ctx_type_0_init(_output_);
   return ;
}

static_inline void synthDrummer_Poly_synthSetModulatorTargetLevel(synthDrummer_Poly__ctx_type_0 &_ctx, uint8_t targetLevel){
}

typedef synthDrummer_Poly__ctx_type_0 synthDrummer_Poly_synthSetModulatorPhaseShift_type;

static_inline void synthDrummer_Poly_synthSetModulatorPhaseShift_init(synthDrummer_Poly__ctx_type_0 &_output_){
   synthDrummer_Poly__ctx_type_0_init(_output_);
   return ;
}

static_inline void synthDrummer_Poly_synthSetModulatorPhaseShift(synthDrummer_Poly__ctx_type_0 &_ctx, fix16_t ratio){
}

typedef synthDrummer_Poly__ctx_type_0 synthDrummer_Poly_synthSetModulatorFeedback_type;

static_inline void synthDrummer_Poly_synthSetModulatorFeedback_init(synthDrummer_Poly__ctx_type_0 &_output_){
   synthDrummer_Poly__ctx_type_0_init(_output_);
   return ;
}

static_inline void synthDrummer_Poly_synthSetModulatorFeedback(synthDrummer_Poly__ctx_type_0 &_ctx, fix16_t ratio){
}

typedef synthDrummer_Poly__ctx_type_0 synthDrummer_Poly_synthSetModulatorADSR_type;

static_inline void synthDrummer_Poly_synthSetModulatorADSR_init(synthDrummer_Poly__ctx_type_0 &_output_){
   synthDrummer_Poly__ctx_type_0_init(_output_);
   return ;
}

static_inline void synthDrummer_Poly_synthSetModulatorADSR(synthDrummer_Poly__ctx_type_0 &_ctx, fix16_t a, fix16_t d, fix16_t s, fix16_t r){
}

typedef synthDrummer_Poly__ctx_type_0 synthDrummer_Poly_synthSetCarrierADSR_type;

static_inline void synthDrummer_Poly_synthSetCarrierADSR_init(synthDrummer_Poly__ctx_type_0 &_output_){
   synthDrummer_Poly__ctx_type_0_init(_output_);
   return ;
}

static_inline void synthDrummer_Poly_synthSetCarrierADSR(synthDrummer_Poly__ctx_type_0 &_ctx, fix16_t a, fix16_t d, fix16_t s, fix16_t r){
}

typedef synthDrummer_Poly__ctx_type_0 synthDrummer_Poly_synthSetEnvDecimationFactor_type;

static_inline void synthDrummer_Poly_synthSetEnvDecimationFactor_init(synthDrummer_Poly__ctx_type_0 &_output_){
   synthDrummer_Poly__ctx_type_0_init(_output_);
   return ;
}

static_inline void synthDrummer_Poly_synthSetEnvDecimationFactor(synthDrummer_Poly__ctx_type_0 &_ctx, int newFactor){
}

typedef synthDrummer_Poly__ctx_type_0 synthDrummer_Poly_shouldLeftOvers_type;

static_inline void synthDrummer_Poly_shouldLeftOvers_init(synthDrummer_Poly__ctx_type_0 &_output_){
   synthDrummer_Poly__ctx_type_0_init(_output_);
   return ;
}

static_inline uint8_t synthDrummer_Poly_shouldLeftOvers(synthDrummer_Poly__ctx_type_0 &_ctx){
   return _ctx.should_leftovers;
};

typedef synthDrummer_Poly__ctx_type_0 synthDrummer_Poly_default_type;

static_inline void synthDrummer_Poly_default_init(synthDrummer_Poly__ctx_type_0 &_output_){
   synthDrummer_Poly__ctx_type_0_init(_output_);
   return ;
}

void synthDrummer_Poly_default(synthDrummer_Poly__ctx_type_0 &_ctx);

typedef struct synthDrummer_Poly__ctx_type_1 {
   synthDrummer_Poly__ctx_type_0 _inst179;
} synthDrummer_Poly__ctx_type_1;

typedef synthDrummer_Poly__ctx_type_1 synthDrummer_Poly_dummy_type;

static_inline void synthDrummer_Poly__ctx_type_1_init(synthDrummer_Poly__ctx_type_1 &_output_){
   synthDrummer_Poly__ctx_type_1 _ctx;
   synthDrummer_Poly__ctx_type_0_init(_ctx._inst179);
   _output_ = _ctx;
   return ;
}

static_inline void synthDrummer_Poly_dummy_init(synthDrummer_Poly__ctx_type_1 &_output_){
   synthDrummer_Poly__ctx_type_1_init(_output_);
   return ;
}

static_inline void synthDrummer_Poly_dummy(synthDrummer_Poly__ctx_type_1 &_ctx){
   fix16_t buff[128];
   synthDrummer_Buffer_buffer(buff);
   synthDrummer_Poly_runVoice(_ctx._inst179,0,0,buff);
}

typedef struct synthDrummer_Notes__ctx_type_0 {
   uint8_t poly;
   int notes[128];
   int nb_notes;
   int last_notes[128];
   uint8_t allowDuplicates;
} synthDrummer_Notes__ctx_type_0;

typedef synthDrummer_Notes__ctx_type_0 synthDrummer_Notes_setPoly_type;

void synthDrummer_Notes__ctx_type_0_init(synthDrummer_Notes__ctx_type_0 &_output_);

static_inline void synthDrummer_Notes_setPoly_init(synthDrummer_Notes__ctx_type_0 &_output_){
   synthDrummer_Notes__ctx_type_0_init(_output_);
   return ;
}

static_inline void synthDrummer_Notes_setPoly(synthDrummer_Notes__ctx_type_0 &_ctx, uint8_t flag){
   _ctx.poly = flag;
};

typedef synthDrummer_Notes__ctx_type_0 synthDrummer_Notes_getPoly_type;

static_inline void synthDrummer_Notes_getPoly_init(synthDrummer_Notes__ctx_type_0 &_output_){
   synthDrummer_Notes__ctx_type_0_init(_output_);
   return ;
}

static_inline uint8_t synthDrummer_Notes_getPoly(synthDrummer_Notes__ctx_type_0 &_ctx){
   return _ctx.poly;
};

typedef synthDrummer_Notes__ctx_type_0 synthDrummer_Notes_setAllowDuplicates_type;

static_inline void synthDrummer_Notes_setAllowDuplicates_init(synthDrummer_Notes__ctx_type_0 &_output_){
   synthDrummer_Notes__ctx_type_0_init(_output_);
   return ;
}

static_inline void synthDrummer_Notes_setAllowDuplicates(synthDrummer_Notes__ctx_type_0 &_ctx, uint8_t flag){
   _ctx.allowDuplicates = flag;
};

typedef synthDrummer_Notes__ctx_type_0 synthDrummer_Notes_default_type;

static_inline void synthDrummer_Notes_default_init(synthDrummer_Notes__ctx_type_0 &_output_){
   synthDrummer_Notes__ctx_type_0_init(_output_);
   return ;
}

static_inline void synthDrummer_Notes_default(synthDrummer_Notes__ctx_type_0 &_ctx){
   synthDrummer_Notes_setPoly(_ctx,false);
   synthDrummer_Notes_setAllowDuplicates(_ctx,false);
}

typedef synthDrummer_Notes__ctx_type_0 synthDrummer_Notes_nbNotes_type;

static_inline void synthDrummer_Notes_nbNotes_init(synthDrummer_Notes__ctx_type_0 &_output_){
   synthDrummer_Notes__ctx_type_0_init(_output_);
   return ;
}

static_inline int synthDrummer_Notes_nbNotes(synthDrummer_Notes__ctx_type_0 &_ctx){
   return _ctx.nb_notes;
};

typedef synthDrummer_Notes__ctx_type_0 synthDrummer_Notes_firstNote_type;

static_inline void synthDrummer_Notes_firstNote_init(synthDrummer_Notes__ctx_type_0 &_output_){
   synthDrummer_Notes__ctx_type_0_init(_output_);
   return ;
}

int synthDrummer_Notes_firstNote(synthDrummer_Notes__ctx_type_0 &_ctx);

typedef synthDrummer_Notes__ctx_type_0 synthDrummer_Notes_lastNote_type;

static_inline void synthDrummer_Notes_lastNote_init(synthDrummer_Notes__ctx_type_0 &_output_){
   synthDrummer_Notes__ctx_type_0_init(_output_);
   return ;
}

int synthDrummer_Notes_lastNote(synthDrummer_Notes__ctx_type_0 &_ctx);

typedef synthDrummer_Notes__ctx_type_0 synthDrummer_Notes_noteOff_type;

static_inline void synthDrummer_Notes_noteOff_init(synthDrummer_Notes__ctx_type_0 &_output_){
   synthDrummer_Notes__ctx_type_0_init(_output_);
   return ;
}

uint8_t synthDrummer_Notes_noteOff(synthDrummer_Notes__ctx_type_0 &_ctx, int note, int channel);

typedef synthDrummer_Notes__ctx_type_0 synthDrummer_Notes_noteOn_type;

static_inline void synthDrummer_Notes_noteOn_init(synthDrummer_Notes__ctx_type_0 &_output_){
   synthDrummer_Notes__ctx_type_0_init(_output_);
   return ;
}

uint8_t synthDrummer_Notes_noteOn(synthDrummer_Notes__ctx_type_0 &_ctx, int note, int velocity, int channel);

typedef struct synthDrummer_Voice__ctx_type_0 {
   synthDrummer_Notes__ctx_type_0 voicesinactive;
   synthDrummer_Notes__ctx_type_0 voicesactive;
   fix16_t voices_ratio;
   int voices[4];
   synthDrummer_Notes__ctx_type_0 voiceinsactive;
   uint8_t reuse;
   synthDrummer_Poly__ctx_type_0 poly;
   int number_voices;
   int notes[128];
   uint8_t normalize;
   fix16_t leftovers_decay;
   fix16_t leftovers;
   int last_velocities[4];
   fix16_t last_values[4];
   fix16_t fs;
   fix16_t buffer_v0[128];
} synthDrummer_Voice__ctx_type_0;

typedef synthDrummer_Voice__ctx_type_0 synthDrummer_Voice_process_type;

void synthDrummer_Voice__ctx_type_0_init(synthDrummer_Voice__ctx_type_0 &_output_);

static_inline void synthDrummer_Voice_process_init(synthDrummer_Voice__ctx_type_0 &_output_){
   synthDrummer_Voice__ctx_type_0_init(_output_);
   return ;
}

fix16_t synthDrummer_Voice_process(synthDrummer_Voice__ctx_type_0 &_ctx);

typedef synthDrummer_Voice__ctx_type_0 synthDrummer_Voice_process_bufferTo_type;

static_inline void synthDrummer_Voice_process_bufferTo_init(synthDrummer_Voice__ctx_type_0 &_output_){
   synthDrummer_Voice__ctx_type_0_init(_output_);
   return ;
}

void synthDrummer_Voice_process_bufferTo(synthDrummer_Voice__ctx_type_0 &_ctx, int nb, fix16_t (&oBuffer)[128]);

typedef synthDrummer_Voice__ctx_type_0 synthDrummer_Voice_setReuse_type;

static_inline void synthDrummer_Voice_setReuse_init(synthDrummer_Voice__ctx_type_0 &_output_){
   synthDrummer_Voice__ctx_type_0_init(_output_);
   return ;
}

static_inline void synthDrummer_Voice_setReuse(synthDrummer_Voice__ctx_type_0 &_ctx, uint8_t flag){
   _ctx.reuse = flag;
};

typedef synthDrummer_Voice__ctx_type_0 synthDrummer_Voice_noteOff_type;

static_inline void synthDrummer_Voice_noteOff_init(synthDrummer_Voice__ctx_type_0 &_output_){
   synthDrummer_Voice__ctx_type_0_init(_output_);
   return ;
}

void synthDrummer_Voice_noteOff(synthDrummer_Voice__ctx_type_0 &_ctx, int note, int channel);

typedef synthDrummer_Voice__ctx_type_0 synthDrummer_Voice_noteOn_type;

static_inline void synthDrummer_Voice_noteOn_init(synthDrummer_Voice__ctx_type_0 &_output_){
   synthDrummer_Voice__ctx_type_0_init(_output_);
   return ;
}

void synthDrummer_Voice_noteOn(synthDrummer_Voice__ctx_type_0 &_ctx, int note, int velocity, int channel);

typedef synthDrummer_Voice__ctx_type_0 synthDrummer_Voice_setNbVoices_type;

static_inline void synthDrummer_Voice_setNbVoices_init(synthDrummer_Voice__ctx_type_0 &_output_){
   synthDrummer_Voice__ctx_type_0_init(_output_);
   return ;
}

void synthDrummer_Voice_setNbVoices(synthDrummer_Voice__ctx_type_0 &_ctx, int nbvoices);

typedef synthDrummer_Voice__ctx_type_0 synthDrummer_Voice_setNormalize_type;

static_inline void synthDrummer_Voice_setNormalize_init(synthDrummer_Voice__ctx_type_0 &_output_){
   synthDrummer_Voice__ctx_type_0_init(_output_);
   return ;
}

static_inline void synthDrummer_Voice_setNormalize(synthDrummer_Voice__ctx_type_0 &_ctx, uint8_t flag){
   _ctx.normalize = flag;
};

typedef synthDrummer_Voice__ctx_type_0 synthDrummer_Voice_setSamplerate_type;

static_inline void synthDrummer_Voice_setSamplerate_init(synthDrummer_Voice__ctx_type_0 &_output_){
   synthDrummer_Voice__ctx_type_0_init(_output_);
   return ;
}

void synthDrummer_Voice_setSamplerate(synthDrummer_Voice__ctx_type_0 &_ctx, fix16_t newFs);

typedef synthDrummer_Voice__ctx_type_0 synthDrummer_Voice_synthSetSustain_type;

static_inline void synthDrummer_Voice_synthSetSustain_init(synthDrummer_Voice__ctx_type_0 &_output_){
   synthDrummer_Voice__ctx_type_0_init(_output_);
   return ;
}

static_inline void synthDrummer_Voice_synthSetSustain(synthDrummer_Voice__ctx_type_0 &_ctx, uint8_t flag){
   synthDrummer_Poly_synthSetSustain(_ctx.poly,flag);
};

typedef synthDrummer_Voice__ctx_type_0 synthDrummer_Voice_synthPitchBend_type;

static_inline void synthDrummer_Voice_synthPitchBend_init(synthDrummer_Voice__ctx_type_0 &_output_){
   synthDrummer_Voice__ctx_type_0_init(_output_);
   return ;
}

static_inline void synthDrummer_Voice_synthPitchBend(synthDrummer_Voice__ctx_type_0 &_ctx, fix16_t semitones){
   synthDrummer_Poly_synthPitchBend(_ctx.poly,semitones);
};

typedef synthDrummer_Voice__ctx_type_0 synthDrummer_Voice_synthSetLoop_type;

static_inline void synthDrummer_Voice_synthSetLoop_init(synthDrummer_Voice__ctx_type_0 &_output_){
   synthDrummer_Voice__ctx_type_0_init(_output_);
   return ;
}

static_inline void synthDrummer_Voice_synthSetLoop(synthDrummer_Voice__ctx_type_0 &_ctx, uint8_t flag){
   synthDrummer_Poly_synthSetLoop(_ctx.poly,flag);
};

typedef synthDrummer_Voice__ctx_type_0 synthDrummer_Voice_synthSetLoopStart_type;

static_inline void synthDrummer_Voice_synthSetLoopStart_init(synthDrummer_Voice__ctx_type_0 &_output_){
   synthDrummer_Voice__ctx_type_0_init(_output_);
   return ;
}

static_inline void synthDrummer_Voice_synthSetLoopStart(synthDrummer_Voice__ctx_type_0 &_ctx, int value){
   synthDrummer_Poly_synthSetLoopStart(_ctx.poly,value);
};

typedef synthDrummer_Voice__ctx_type_0 synthDrummer_Voice_synthSetLoopEnd_type;

static_inline void synthDrummer_Voice_synthSetLoopEnd_init(synthDrummer_Voice__ctx_type_0 &_output_){
   synthDrummer_Voice__ctx_type_0_init(_output_);
   return ;
}

static_inline void synthDrummer_Voice_synthSetLoopEnd(synthDrummer_Voice__ctx_type_0 &_ctx, int value){
   synthDrummer_Poly_synthSetLoopEnd(_ctx.poly,value);
};

typedef synthDrummer_Voice__ctx_type_0 synthDrummer_Voice_synthGetLoop_type;

static_inline void synthDrummer_Voice_synthGetLoop_init(synthDrummer_Voice__ctx_type_0 &_output_){
   synthDrummer_Voice__ctx_type_0_init(_output_);
   return ;
}

static_inline uint8_t synthDrummer_Voice_synthGetLoop(synthDrummer_Voice__ctx_type_0 &_ctx){
   return synthDrummer_Poly_synthGetLoop(_ctx.poly);
};

typedef synthDrummer_Voice__ctx_type_0 synthDrummer_Voice_synthGetLoopStart_type;

static_inline void synthDrummer_Voice_synthGetLoopStart_init(synthDrummer_Voice__ctx_type_0 &_output_){
   synthDrummer_Voice__ctx_type_0_init(_output_);
   return ;
}

static_inline int synthDrummer_Voice_synthGetLoopStart(synthDrummer_Voice__ctx_type_0 &_ctx){
   return synthDrummer_Poly_synthGetLoopStart(_ctx.poly);
};

typedef synthDrummer_Voice__ctx_type_0 synthDrummer_Voice_synthGetLoopEnd_type;

static_inline void synthDrummer_Voice_synthGetLoopEnd_init(synthDrummer_Voice__ctx_type_0 &_output_){
   synthDrummer_Voice__ctx_type_0_init(_output_);
   return ;
}

static_inline int synthDrummer_Voice_synthGetLoopEnd(synthDrummer_Voice__ctx_type_0 &_ctx){
   return synthDrummer_Poly_synthGetLoopEnd(_ctx.poly);
};

typedef synthDrummer_Voice__ctx_type_0 synthDrummer_Voice_synthGetSize_type;

static_inline void synthDrummer_Voice_synthGetSize_init(synthDrummer_Voice__ctx_type_0 &_output_){
   synthDrummer_Voice__ctx_type_0_init(_output_);
   return ;
}

static_inline int synthDrummer_Voice_synthGetSize(synthDrummer_Voice__ctx_type_0 &_ctx){
   return synthDrummer_Poly_synthGetSize(_ctx.poly);
};

typedef synthDrummer_Voice__ctx_type_0 synthDrummer_Voice_synthGetNbWavetables_type;

static_inline void synthDrummer_Voice_synthGetNbWavetables_init(synthDrummer_Voice__ctx_type_0 &_output_){
   synthDrummer_Voice__ctx_type_0_init(_output_);
   return ;
}

static_inline int synthDrummer_Voice_synthGetNbWavetables(synthDrummer_Voice__ctx_type_0 &_ctx){
   return synthDrummer_Poly_synthGetNbWavetables(_ctx.poly);
};

typedef synthDrummer_Voice__ctx_type_0 synthDrummer_Voice_synthSetModulatorWavetable_type;

static_inline void synthDrummer_Voice_synthSetModulatorWavetable_init(synthDrummer_Voice__ctx_type_0 &_output_){
   synthDrummer_Voice__ctx_type_0_init(_output_);
   return ;
}

static_inline void synthDrummer_Voice_synthSetModulatorWavetable(synthDrummer_Voice__ctx_type_0 &_ctx, fix16_t wavetableIdx){
   synthDrummer_Poly_synthSetModulatorWavetable(_ctx.poly,wavetableIdx);
};

typedef synthDrummer_Voice__ctx_type_0 synthDrummer_Voice_synthSetModulatorWavetablePhase_type;

static_inline void synthDrummer_Voice_synthSetModulatorWavetablePhase_init(synthDrummer_Voice__ctx_type_0 &_output_){
   synthDrummer_Voice__ctx_type_0_init(_output_);
   return ;
}

static_inline void synthDrummer_Voice_synthSetModulatorWavetablePhase(synthDrummer_Voice__ctx_type_0 &_ctx, fix16_t phaseIdx){
   synthDrummer_Poly_synthSetModulatorWavetablePhase(_ctx.poly,phaseIdx);
};

typedef synthDrummer_Voice__ctx_type_0 synthDrummer_Voice_synthSetCarrierWavetable_type;

static_inline void synthDrummer_Voice_synthSetCarrierWavetable_init(synthDrummer_Voice__ctx_type_0 &_output_){
   synthDrummer_Voice__ctx_type_0_init(_output_);
   return ;
}

static_inline void synthDrummer_Voice_synthSetCarrierWavetable(synthDrummer_Voice__ctx_type_0 &_ctx, fix16_t wavetableIdx){
   synthDrummer_Poly_synthSetCarrierWavetable(_ctx.poly,wavetableIdx);
};

typedef synthDrummer_Voice__ctx_type_0 synthDrummer_Voice_synthSetCarrierWavetablePhase_type;

static_inline void synthDrummer_Voice_synthSetCarrierWavetablePhase_init(synthDrummer_Voice__ctx_type_0 &_output_){
   synthDrummer_Voice__ctx_type_0_init(_output_);
   return ;
}

static_inline void synthDrummer_Voice_synthSetCarrierWavetablePhase(synthDrummer_Voice__ctx_type_0 &_ctx, fix16_t phaseIdx){
   synthDrummer_Poly_synthSetCarrierWavetablePhase(_ctx.poly,phaseIdx);
};

typedef synthDrummer_Voice__ctx_type_0 synthDrummer_Voice_synthSetModulatorRatio_type;

static_inline void synthDrummer_Voice_synthSetModulatorRatio_init(synthDrummer_Voice__ctx_type_0 &_output_){
   synthDrummer_Voice__ctx_type_0_init(_output_);
   return ;
}

static_inline void synthDrummer_Voice_synthSetModulatorRatio(synthDrummer_Voice__ctx_type_0 &_ctx, fix16_t ratio){
   synthDrummer_Poly_synthSetModulatorRatio(_ctx.poly,ratio);
};

typedef synthDrummer_Voice__ctx_type_0 synthDrummer_Voice_synthSetCarrierRatio_type;

static_inline void synthDrummer_Voice_synthSetCarrierRatio_init(synthDrummer_Voice__ctx_type_0 &_output_){
   synthDrummer_Voice__ctx_type_0_init(_output_);
   return ;
}

static_inline void synthDrummer_Voice_synthSetCarrierRatio(synthDrummer_Voice__ctx_type_0 &_ctx, fix16_t ratio){
   synthDrummer_Poly_synthSetCarrierRatio(_ctx.poly,ratio);
};

typedef synthDrummer_Voice__ctx_type_0 synthDrummer_Voice_synthSetModulatorLevel_type;

static_inline void synthDrummer_Voice_synthSetModulatorLevel_init(synthDrummer_Voice__ctx_type_0 &_output_){
   synthDrummer_Voice__ctx_type_0_init(_output_);
   return ;
}

static_inline void synthDrummer_Voice_synthSetModulatorLevel(synthDrummer_Voice__ctx_type_0 &_ctx, fix16_t level){
   synthDrummer_Poly_synthSetModulatorLevel(_ctx.poly,level);
};

typedef synthDrummer_Voice__ctx_type_0 synthDrummer_Voice_synthSetModulatorTargetLevel_type;

static_inline void synthDrummer_Voice_synthSetModulatorTargetLevel_init(synthDrummer_Voice__ctx_type_0 &_output_){
   synthDrummer_Voice__ctx_type_0_init(_output_);
   return ;
}

static_inline void synthDrummer_Voice_synthSetModulatorTargetLevel(synthDrummer_Voice__ctx_type_0 &_ctx, uint8_t targetLevel){
   synthDrummer_Poly_synthSetModulatorTargetLevel(_ctx.poly,targetLevel);
};

typedef synthDrummer_Voice__ctx_type_0 synthDrummer_Voice_synthSetModulatorPhaseShift_type;

static_inline void synthDrummer_Voice_synthSetModulatorPhaseShift_init(synthDrummer_Voice__ctx_type_0 &_output_){
   synthDrummer_Voice__ctx_type_0_init(_output_);
   return ;
}

static_inline void synthDrummer_Voice_synthSetModulatorPhaseShift(synthDrummer_Voice__ctx_type_0 &_ctx, fix16_t ratio){
   synthDrummer_Poly_synthSetModulatorPhaseShift(_ctx.poly,ratio);
};

typedef synthDrummer_Voice__ctx_type_0 synthDrummer_Voice_synthSetModulatorFeedback_type;

static_inline void synthDrummer_Voice_synthSetModulatorFeedback_init(synthDrummer_Voice__ctx_type_0 &_output_){
   synthDrummer_Voice__ctx_type_0_init(_output_);
   return ;
}

static_inline void synthDrummer_Voice_synthSetModulatorFeedback(synthDrummer_Voice__ctx_type_0 &_ctx, fix16_t ratio){
   synthDrummer_Poly_synthSetModulatorFeedback(_ctx.poly,ratio);
};

typedef synthDrummer_Voice__ctx_type_0 synthDrummer_Voice_synthSetModulatorADSR_type;

static_inline void synthDrummer_Voice_synthSetModulatorADSR_init(synthDrummer_Voice__ctx_type_0 &_output_){
   synthDrummer_Voice__ctx_type_0_init(_output_);
   return ;
}

static_inline void synthDrummer_Voice_synthSetModulatorADSR(synthDrummer_Voice__ctx_type_0 &_ctx, fix16_t a, fix16_t d, fix16_t s, fix16_t r){
   synthDrummer_Poly_synthSetModulatorADSR(_ctx.poly,a,d,s,r);
};

typedef synthDrummer_Voice__ctx_type_0 synthDrummer_Voice_synthSetCarrierADSR_type;

static_inline void synthDrummer_Voice_synthSetCarrierADSR_init(synthDrummer_Voice__ctx_type_0 &_output_){
   synthDrummer_Voice__ctx_type_0_init(_output_);
   return ;
}

static_inline void synthDrummer_Voice_synthSetCarrierADSR(synthDrummer_Voice__ctx_type_0 &_ctx, fix16_t a, fix16_t d, fix16_t s, fix16_t r){
   synthDrummer_Poly_synthSetCarrierADSR(_ctx.poly,a,d,s,r);
};

typedef synthDrummer_Voice__ctx_type_0 synthDrummer_Voice_synthSetEnvDecimationFactor_type;

static_inline void synthDrummer_Voice_synthSetEnvDecimationFactor_init(synthDrummer_Voice__ctx_type_0 &_output_){
   synthDrummer_Voice__ctx_type_0_init(_output_);
   return ;
}

static_inline void synthDrummer_Voice_synthSetEnvDecimationFactor(synthDrummer_Voice__ctx_type_0 &_ctx, int newFactor){
   synthDrummer_Poly_synthSetEnvDecimationFactor(_ctx.poly,newFactor);
};

typedef synthDrummer_Voice__ctx_type_0 synthDrummer_Voice_default_type;

static_inline void synthDrummer_Voice_default_init(synthDrummer_Voice__ctx_type_0 &_output_){
   synthDrummer_Voice__ctx_type_0_init(_output_);
   return ;
}

void synthDrummer_Voice_default(synthDrummer_Voice__ctx_type_0 &_ctx);

typedef struct synthDrummer_Voice__ctx_type_1 {
   synthDrummer_Voice__ctx_type_0 _inst1b9;
} synthDrummer_Voice__ctx_type_1;

typedef synthDrummer_Voice__ctx_type_1 synthDrummer_Voice_dummy_type;

static_inline void synthDrummer_Voice__ctx_type_1_init(synthDrummer_Voice__ctx_type_1 &_output_){
   synthDrummer_Voice__ctx_type_1 _ctx;
   synthDrummer_Voice__ctx_type_0_init(_ctx._inst1b9);
   _output_ = _ctx;
   return ;
}

static_inline void synthDrummer_Voice_dummy_init(synthDrummer_Voice__ctx_type_1 &_output_){
   synthDrummer_Voice__ctx_type_1_init(_output_);
   return ;
}

static_inline void synthDrummer_Voice_dummy(synthDrummer_Voice__ctx_type_1 &_ctx){
   fix16_t buff[128];
   synthDrummer_Buffer_buffer(buff);
   synthDrummer_Voice_process_bufferTo(_ctx._inst1b9,0,buff);
}

int synthDrummer_Processor_cvToPitch(fix16_t cv);

typedef struct synthDrummer_Processor__ctx_type_1 {
   synthDrummer_Voice__ctx_type_0 voice;
   int last_pitches[16];
   int last_nbcables;
   uint8_t last_gates[16];
   fix16_t fs;
} synthDrummer_Processor__ctx_type_1;

typedef synthDrummer_Processor__ctx_type_1 synthDrummer_Processor_process_type;

void synthDrummer_Processor__ctx_type_1_init(synthDrummer_Processor__ctx_type_1 &_output_);

static_inline void synthDrummer_Processor_process_init(synthDrummer_Processor__ctx_type_1 &_output_){
   synthDrummer_Processor__ctx_type_1_init(_output_);
   return ;
}

static_inline fix16_t synthDrummer_Processor_process(synthDrummer_Processor__ctx_type_1 &_ctx){
   return synthDrummer_Voice_process(_ctx.voice);
};

typedef synthDrummer_Processor__ctx_type_1 synthDrummer_Processor_setNote_type;

static_inline void synthDrummer_Processor_setNote_init(synthDrummer_Processor__ctx_type_1 &_output_){
   synthDrummer_Processor__ctx_type_1_init(_output_);
   return ;
}

void synthDrummer_Processor_setNote(synthDrummer_Processor__ctx_type_1 &_ctx, fix16_t gate, fix16_t voct, fix16_t vel, int cable);

typedef synthDrummer_Processor__ctx_type_1 synthDrummer_Processor_setPitchBend_type;

static_inline void synthDrummer_Processor_setPitchBend_init(synthDrummer_Processor__ctx_type_1 &_output_){
   synthDrummer_Processor__ctx_type_1_init(_output_);
   return ;
}

static_inline void synthDrummer_Processor_setPitchBend(synthDrummer_Processor__ctx_type_1 &_ctx, fix16_t semitones){
   synthDrummer_Voice_synthPitchBend(_ctx.voice,semitones);
};

typedef synthDrummer_Processor__ctx_type_1 synthDrummer_Processor_nbCables_type;

static_inline void synthDrummer_Processor_nbCables_init(synthDrummer_Processor__ctx_type_1 &_output_){
   synthDrummer_Processor__ctx_type_1_init(_output_);
   return ;
}

void synthDrummer_Processor_nbCables(synthDrummer_Processor__ctx_type_1 &_ctx, int nbcables);

typedef synthDrummer_Processor__ctx_type_1 synthDrummer_Processor_setSamplerate_type;

static_inline void synthDrummer_Processor_setSamplerate_init(synthDrummer_Processor__ctx_type_1 &_output_){
   synthDrummer_Processor__ctx_type_1_init(_output_);
   return ;
}

static_inline void synthDrummer_Processor_setSamplerate(synthDrummer_Processor__ctx_type_1 &_ctx, fix16_t newFs){
   if((newFs > 0x0 /* 0.000000 */) && (newFs != _ctx.fs)){
      _ctx.fs = newFs;
      synthDrummer_Voice_setSamplerate(_ctx.voice,_ctx.fs);
   }
};

typedef synthDrummer_Processor__ctx_type_1 synthDrummer_Processor_default_type;

static_inline void synthDrummer_Processor_default_init(synthDrummer_Processor__ctx_type_1 &_output_){
   synthDrummer_Processor__ctx_type_1_init(_output_);
   return ;
}

static_inline void synthDrummer_Processor_default(synthDrummer_Processor__ctx_type_1 &_ctx){
   synthDrummer_Voice_default(_ctx.voice);
   synthDrummer_Processor_setSamplerate(_ctx,0x2c1999 /* 44.100000 */);
}



#endif // ENGINE_SYNTHDRUMMER_H
